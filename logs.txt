* 
* ==> Audit <==
* |-----------|---------------------|----------|-------------------|---------|---------------------|---------------------|
|  Command  |        Args         | Profile  |       User        | Version |     Start Time      |      End Time       |
|-----------|---------------------|----------|-------------------|---------|---------------------|---------------------|
| start     | --driver=hyperv     | minikube | anjalibathla33951 | v1.29.0 | 13 Mar 23 16:32 JST |                     |
| start     | --driver=docker     | minikube | anjalibathla33951 | v1.29.0 | 13 Mar 23 16:33 JST |                     |
| start     |                     | minikube | anjalibathla33951 | v1.29.0 | 14 Mar 23 12:30 JST |                     |
| start     | --driver=docker     | minikube | anjalibathla33951 | v1.30.1 | 16 May 23 10:24 JST |                     |
| start     | --driver=docker     | minikube | anjalibathla33951 | v1.30.1 | 16 May 23 11:25 JST | 16 May 23 11:26 JST |
| start     |                     | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 11:25 JST | 22 May 23 11:25 JST |
| service   | my-service --url    | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 13:21 JST |                     |
| service   | nginx-service --url | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 13:21 JST | 22 May 23 13:24 JST |
| service   | nginx-service       | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 13:22 JST |                     |
| service   | nginx-service --url | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 13:39 JST | 22 May 23 13:39 JST |
| service   | nginx-service       | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 13:40 JST |                     |
| service   | nginx-service       | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 13:40 JST |                     |
| service   | nginx-service       | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 13:47 JST |                     |
| service   | nginx-service       | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 13:47 JST |                     |
| tunnel    |                     | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 14:29 JST | 22 May 23 14:29 JST |
| service   | nginx-service --url | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 14:29 JST | 22 May 23 14:29 JST |
| tunnel    |                     | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 14:29 JST | 22 May 23 14:34 JST |
| service   | nginx-service --url | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 14:37 JST | 22 May 23 14:41 JST |
| ip        |                     | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 14:41 JST | 22 May 23 14:41 JST |
| stop      |                     | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 14:42 JST | 22 May 23 14:42 JST |
| start     |                     | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 14:43 JST | 22 May 23 14:43 JST |
| service   | nginx-service --url | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 14:44 JST | 22 May 23 14:44 JST |
| service   | nginx-service       | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 14:45 JST |                     |
| service   | nginx-service --url | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 14:45 JST | 22 May 23 14:47 JST |
| service   | nginx-service --url | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 16:03 JST | 22 May 23 16:03 JST |
| service   | nginx-service       | minikube | anjalibathla33951 | v1.30.1 | 22 May 23 16:03 JST |                     |
| stop      |                     | minikube | anjalibathla33951 | v1.30.1 | 23 May 23 13:31 JST | 23 May 23 13:31 JST |
| start     | --driver=conntrack  | minikube | anjalibathla33951 | v1.30.1 | 23 May 23 13:31 JST |                     |
| start     |                     | minikube | anjalibathla33951 | v1.30.1 | 23 May 23 13:34 JST | 23 May 23 13:35 JST |
| stop      |                     | minikube | anjalibathla33951 | v1.30.1 | 23 May 23 14:10 JST | 23 May 23 14:10 JST |
| start     | --driver=conntrack  | minikube | anjalibathla33951 | v1.30.1 | 23 May 23 14:11 JST |                     |
| delete    |                     | minikube | anjalibathla33951 | v1.30.1 | 23 May 23 14:11 JST | 23 May 23 14:11 JST |
| start     | --driver=conntrack  | minikube | anjalibathla33951 | v1.30.1 | 23 May 23 14:11 JST |                     |
| start     |                     | minikube | anjalibathla33951 | v1.30.1 | 23 May 23 14:11 JST | 23 May 23 14:15 JST |
| service   | nginx-service       | minikube | anjalibathla33951 | v1.30.1 | 23 May 23 15:29 JST |                     |
| dashboard |                     | minikube | anjalibathla33951 | v1.30.1 | 23 May 23 16:03 JST |                     |
| ip        |                     | minikube | anjalibathla33951 | v1.30.1 | 24 May 23 10:43 JST | 24 May 23 10:43 JST |
| ip        |                     | minikube | anjalibathla33951 | v1.30.1 | 24 May 23 14:03 JST | 24 May 23 14:03 JST |
| start     |                     | minikube | anjalibathla33951 | v1.30.1 | 25 May 23 12:57 JST | 25 May 23 12:57 JST |
| start     | --driver=docker     | minikube | anjalibathla33951 | v1.30.1 | 26 May 23 12:47 JST | 26 May 23 12:48 JST |
| addons    | enable ingress      | minikube | anjalibathla33951 | v1.30.1 | 26 May 23 15:50 JST |                     |
| addons    | enable ingress      | minikube | anjalibathla33951 | v1.30.1 | 26 May 23 15:58 JST |                     |
| start     |                     | minikube | anjalibathla33951 | v1.30.1 | 29 May 23 09:58 JST | 29 May 23 09:59 JST |
| addons    | enable ingress      | minikube | anjalibathla33951 | v1.30.1 | 29 May 23 09:59 JST |                     |
| stop      |                     | minikube | anjalibathla33951 | v1.30.1 | 29 May 23 10:23 JST | 29 May 23 10:23 JST |
| delete    |                     | minikube | anjalibathla33951 | v1.30.1 | 29 May 23 10:23 JST | 29 May 23 10:23 JST |
| start     |                     | minikube | anjalibathla33951 | v1.30.1 | 29 May 23 10:23 JST | 29 May 23 10:24 JST |
|-----------|---------------------|----------|-------------------|---------|---------------------|---------------------|

* 
* ==> Last Start <==
* Log file created at: 2023/05/29 10:23:50
Running on machine: C11-BUWIM5METGY
Binary: Built with gc go1.20.2 for linux/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0529 10:23:50.912036    1052 out.go:296] Setting OutFile to fd 1 ...
I0529 10:23:50.912587    1052 out.go:348] isatty.IsTerminal(1) = true
I0529 10:23:50.912594    1052 out.go:309] Setting ErrFile to fd 2...
I0529 10:23:50.912602    1052 out.go:348] isatty.IsTerminal(2) = true
I0529 10:23:50.912716    1052 root.go:336] Updating PATH: /home/anjalibathla33951/.minikube/bin
I0529 10:23:50.913077    1052 out.go:303] Setting JSON to false
I0529 10:23:50.914360    1052 start.go:125] hostinfo: {"hostname":"C11-BUWIM5METGY","uptime":3506,"bootTime":1685319925,"procs":24,"os":"linux","platform":"ubuntu","platformFamily":"debian","platformVersion":"22.04","kernelVersion":"5.10.102.1-microsoft-standard-WSL2","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"guest","hostId":"0135af04-3ce3-406a-bb95-7629561d7807"}
I0529 10:23:50.914415    1052 start.go:135] virtualization:  guest
I0529 10:23:50.921269    1052 out.go:177] 😄  minikube v1.30.1 on Ubuntu 22.04 (amd64)
I0529 10:23:50.932823    1052 notify.go:220] Checking for updates...
I0529 10:23:50.933761    1052 driver.go:375] Setting default libvirt URI to qemu:///system
I0529 10:23:50.933801    1052 global.go:111] Querying for installed drivers using PATH=/home/anjalibathla33951/.minikube/bin:/opt/services/jdk/java/jdk-17.0.6:/opt/services/jdk/java/jdk-17.0.6/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
I0529 10:23:50.971706    1052 global.go:122] none default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0529 10:23:50.971799    1052 global.go:122] podman default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "podman": executable file not found in $PATH Reason: Fix:Install Podman Doc:https://minikube.sigs.k8s.io/docs/drivers/podman/ Version:}
I0529 10:23:50.971824    1052 global.go:122] qemu2 default: true priority: 7, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "qemu-system-x86_64": executable file not found in $PATH Reason: Fix:Install qemu-system Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/qemu/ Version:}
I0529 10:23:50.971829    1052 global.go:122] ssh default: false priority: 4, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0529 10:23:50.971846    1052 global.go:122] virtualbox default: true priority: 6, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:unable to find VBoxManage in $PATH Reason: Fix:Install VirtualBox Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/virtualbox/ Version:}
I0529 10:23:50.971867    1052 global.go:122] vmware default: false priority: 5, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "docker-machine-driver-vmware": executable file not found in $PATH Reason: Fix:Install docker-machine-driver-vmware Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/vmware/ Version:}
I0529 10:23:50.996769    1052 docker.go:121] docker version: linux-23.0.5:Docker Desktop
I0529 10:23:50.996967    1052 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0529 10:23:51.093212    1052 info.go:266] docker info: {ID:dc34f70c-db0d-4785-88b3-822cac1305ee Containers:5 ContainersRunning:5 ContainersPaused:0 ContainersStopped:0 Images:10 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:91 OomKillDisable:true NGoroutines:102 SystemTime:2023-05-29 01:23:51.082703897 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:10 KernelVersion:5.10.102.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:8169500672 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:23.0.5 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:2806fc1057397dbaeefbea0e4e17bddfbd388f38 Expected:2806fc1057397dbaeefbea0e4e17bddfbd388f38} RuncCommit:{ID:v1.1.5-0-gf19387a Expected:v1.1.5-0-gf19387a} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-buildx] ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.10.4] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-compose] ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.17.3] map[Name:dev Path:/usr/local/lib/docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:/usr/local/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.19] map[Name:init Path:/usr/local/lib/docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.4] map[Name:sbom Path:/usr/local/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:/usr/local/lib/docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-scan] ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:/usr/local/lib/docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Command line tool for Docker Scout Vendor:Docker Inc. Version:v0.10.0]] Warnings:<nil>}}
I0529 10:23:51.093389    1052 docker.go:294] overlay module found
I0529 10:23:51.093402    1052 global.go:122] docker default: true priority: 9, state: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0529 10:23:51.093472    1052 global.go:122] kvm2 default: true priority: 8, state: {Installed:false Healthy:false Running:false NeedsImprovement:false Error:exec: "virsh": executable file not found in $PATH Reason: Fix:Install libvirt Doc:https://minikube.sigs.k8s.io/docs/reference/drivers/kvm2/ Version:}
I0529 10:23:51.093493    1052 driver.go:310] not recommending "none" due to default: false
I0529 10:23:51.093497    1052 driver.go:310] not recommending "ssh" due to default: false
I0529 10:23:51.093510    1052 driver.go:345] Picked: docker
I0529 10:23:51.093516    1052 driver.go:346] Alternatives: [none ssh]
I0529 10:23:51.093521    1052 driver.go:347] Rejects: [podman qemu2 virtualbox vmware kvm2]
I0529 10:23:51.100591    1052 out.go:177] ✨  Automatically selected the docker driver. Other choices: none, ssh
I0529 10:23:51.106884    1052 start.go:295] selected driver: docker
I0529 10:23:51.106896    1052 start.go:870] validating driver "docker" against <nil>
I0529 10:23:51.106908    1052 start.go:881] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0529 10:23:51.107001    1052 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0529 10:23:51.175969    1052 info.go:266] docker info: {ID:dc34f70c-db0d-4785-88b3-822cac1305ee Containers:5 ContainersRunning:5 ContainersPaused:0 ContainersStopped:0 Images:10 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:91 OomKillDisable:true NGoroutines:102 SystemTime:2023-05-29 01:23:51.166428121 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:10 KernelVersion:5.10.102.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:8169500672 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:23.0.5 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:2806fc1057397dbaeefbea0e4e17bddfbd388f38 Expected:2806fc1057397dbaeefbea0e4e17bddfbd388f38} RuncCommit:{ID:v1.1.5-0-gf19387a Expected:v1.1.5-0-gf19387a} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:/usr/local/lib/docker/cli-plugins/docker-buildx SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-buildx] ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.10.4] map[Name:compose Path:/usr/local/lib/docker/cli-plugins/docker-compose SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-compose] ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.17.3] map[Name:dev Path:/usr/local/lib/docker/cli-plugins/docker-dev SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:/usr/local/lib/docker/cli-plugins/docker-extension SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.19] map[Name:init Path:/usr/local/lib/docker/cli-plugins/docker-init SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v0.1.0-beta.4] map[Name:sbom Path:/usr/local/lib/docker/cli-plugins/docker-sbom SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scan Path:/usr/local/lib/docker/cli-plugins/docker-scan SchemaVersion:0.1.0 ShadowedPaths:[/usr/libexec/docker/cli-plugins/docker-scan] ShortDescription:Docker Scan Vendor:Docker Inc. Version:v0.26.0] map[Name:scout Path:/usr/local/lib/docker/cli-plugins/docker-scout SchemaVersion:0.1.0 ShortDescription:Command line tool for Docker Scout Vendor:Docker Inc. Version:v0.10.0]] Warnings:<nil>}}
I0529 10:23:51.176065    1052 start_flags.go:305] no existing cluster config was found, will generate one from the flags 
I0529 10:23:51.176456    1052 start_flags.go:386] Using suggested 2200MB memory alloc based on sys=7791MB, container=7791MB
I0529 10:23:51.176924    1052 start_flags.go:901] Wait components to verify : map[apiserver:true system_pods:true]
I0529 10:23:51.182866    1052 out.go:177] 📌  Using Docker driver with root privileges
W0529 10:23:51.188721    1052 out.go:239] ❗  For an improved experience it's recommended to use Docker Engine instead of Docker Desktop.
Docker Engine installation instructions: https://docs.docker.com/engine/install/#server
I0529 10:23:51.188800    1052 cni.go:84] Creating CNI manager for ""
I0529 10:23:51.188812    1052 cni.go:157] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0529 10:23:51.188820    1052 start_flags.go:314] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0529 10:23:51.188839    1052 start_flags.go:319] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.26.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/anjalibathla33951:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP:}
I0529 10:23:51.194748    1052 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0529 10:23:51.206094    1052 cache.go:120] Beginning downloading kic base image for docker with docker
I0529 10:23:51.211853    1052 out.go:177] 🚜  Pulling base image ...
I0529 10:23:51.217627    1052 preload.go:132] Checking if preload exists for k8s version v1.26.3 and runtime docker
I0529 10:23:51.217670    1052 preload.go:148] Found local preload: /home/anjalibathla33951/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.26.3-docker-overlay2-amd64.tar.lz4
I0529 10:23:51.217678    1052 cache.go:57] Caching tarball of preloaded images
I0529 10:23:51.217731    1052 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 in local docker daemon
I0529 10:23:51.217831    1052 preload.go:174] Found /home/anjalibathla33951/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.26.3-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0529 10:23:51.217838    1052 cache.go:60] Finished verifying existence of preloaded tar for  v1.26.3 on docker
I0529 10:23:51.218072    1052 profile.go:148] Saving config to /home/anjalibathla33951/.minikube/profiles/minikube/config.json ...
I0529 10:23:51.218082    1052 lock.go:35] WriteFile acquiring /home/anjalibathla33951/.minikube/profiles/minikube/config.json: {Name:mk1cde480e6142f9352b2324d52342130ac734b0 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0529 10:23:51.238418    1052 image.go:83] Found gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 in local docker daemon, skipping pull
I0529 10:23:51.238444    1052 cache.go:143] gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 exists in daemon, skipping load
I0529 10:23:51.238549    1052 cache.go:193] Successfully downloaded all kic artifacts
I0529 10:23:51.238591    1052 start.go:364] acquiring machines lock for minikube: {Name:mk08a283973e281c2e837fb04fbc83a51ebf1a92 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0529 10:23:51.238788    1052 start.go:368] acquired machines lock for "minikube" in 109.054µs
I0529 10:23:51.238845    1052 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.26.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.26.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/anjalibathla33951:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP:} &{Name: IP: Port:8443 KubernetesVersion:v1.26.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0529 10:23:51.238972    1052 start.go:125] createHost starting for "" (driver="docker")
I0529 10:23:51.245471    1052 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=2200MB) ...
I0529 10:23:51.246183    1052 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0529 10:23:51.246220    1052 client.go:168] LocalClient.Create starting
I0529 10:23:51.246328    1052 main.go:141] libmachine: Reading certificate data from /home/anjalibathla33951/.minikube/certs/ca.pem
I0529 10:23:51.246359    1052 main.go:141] libmachine: Decoding PEM data...
I0529 10:23:51.246374    1052 main.go:141] libmachine: Parsing certificate...
I0529 10:23:51.246827    1052 main.go:141] libmachine: Reading certificate data from /home/anjalibathla33951/.minikube/certs/cert.pem
I0529 10:23:51.246884    1052 main.go:141] libmachine: Decoding PEM data...
I0529 10:23:51.246894    1052 main.go:141] libmachine: Parsing certificate...
I0529 10:23:51.247522    1052 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0529 10:23:51.266431    1052 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0529 10:23:51.266484    1052 network_create.go:281] running [docker network inspect minikube] to gather additional debugging logs...
I0529 10:23:51.266497    1052 cli_runner.go:164] Run: docker network inspect minikube
W0529 10:23:51.284941    1052 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0529 10:23:51.284962    1052 network_create.go:284] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0529 10:23:51.284975    1052 network_create.go:286] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0529 10:23:51.285066    1052 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0529 10:23:51.304535    1052 network.go:209] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc0011a85f0}
I0529 10:23:51.304567    1052 network_create.go:123] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0529 10:23:51.304611    1052 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0529 10:23:51.369360    1052 network_create.go:107] docker network minikube 192.168.49.0/24 created
I0529 10:23:51.369379    1052 kic.go:117] calculated static IP "192.168.49.2" for the "minikube" container
I0529 10:23:51.369430    1052 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0529 10:23:51.390557    1052 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0529 10:23:51.412738    1052 oci.go:103] Successfully created a docker volume minikube
I0529 10:23:51.412805    1052 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 -d /var/lib
I0529 10:23:52.758058    1052 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 -d /var/lib: (1.345198378s)
I0529 10:23:52.758085    1052 oci.go:107] Successfully prepared a docker volume minikube
I0529 10:23:52.758150    1052 preload.go:132] Checking if preload exists for k8s version v1.26.3 and runtime docker
I0529 10:23:52.758173    1052 kic.go:190] Starting extracting preloaded images to volume ...
I0529 10:23:52.758245    1052 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v /home/anjalibathla33951/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.26.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 -I lz4 -xf /preloaded.tar -C /extractDir
I0529 10:23:59.958104    1052 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v /home/anjalibathla33951/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.26.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 -I lz4 -xf /preloaded.tar -C /extractDir: (7.19980099s)
I0529 10:23:59.958139    1052 kic.go:199] duration metric: took 7.199960 seconds to extract preloaded images to volume
W0529 10:23:59.958596    1052 cgroups_linux.go:77] Your kernel does not support swap limit capabilities or the cgroup is not mounted.
I0529 10:23:59.958719    1052 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0529 10:24:00.064577    1052 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=2200mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106
I0529 10:24:00.720122    1052 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0529 10:24:00.748593    1052 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0529 10:24:00.781520    1052 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0529 10:24:00.865023    1052 oci.go:144] the created container "minikube" has a running status.
I0529 10:24:00.865093    1052 kic.go:221] Creating ssh key for kic: /home/anjalibathla33951/.minikube/machines/minikube/id_rsa...
I0529 10:24:01.008505    1052 kic_runner.go:191] docker (temp): /home/anjalibathla33951/.minikube/machines/minikube/id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0529 10:24:01.109345    1052 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0529 10:24:01.159881    1052 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0529 10:24:01.159899    1052 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0529 10:24:01.401798    1052 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0529 10:24:01.433079    1052 machine.go:88] provisioning docker machine ...
I0529 10:24:01.433133    1052 ubuntu.go:169] provisioning hostname "minikube"
I0529 10:24:01.433221    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0529 10:24:01.462525    1052 main.go:141] libmachine: Using SSH client type: native
I0529 10:24:01.462932    1052 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x80e3e0] 0x811480 <nil>  [] 0s} 127.0.0.1 49855 <nil> <nil>}
I0529 10:24:01.462940    1052 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0529 10:24:01.610986    1052 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0529 10:24:01.611067    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0529 10:24:01.640545    1052 main.go:141] libmachine: Using SSH client type: native
I0529 10:24:01.640911    1052 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x80e3e0] 0x811480 <nil>  [] 0s} 127.0.0.1 49855 <nil> <nil>}
I0529 10:24:01.640921    1052 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0529 10:24:01.768376    1052 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0529 10:24:01.768391    1052 ubuntu.go:175] set auth options {CertDir:/home/anjalibathla33951/.minikube CaCertPath:/home/anjalibathla33951/.minikube/certs/ca.pem CaPrivateKeyPath:/home/anjalibathla33951/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/home/anjalibathla33951/.minikube/machines/server.pem ServerKeyPath:/home/anjalibathla33951/.minikube/machines/server-key.pem ClientKeyPath:/home/anjalibathla33951/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/home/anjalibathla33951/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/home/anjalibathla33951/.minikube}
I0529 10:24:01.768405    1052 ubuntu.go:177] setting up certificates
I0529 10:24:01.768419    1052 provision.go:83] configureAuth start
I0529 10:24:01.768466    1052 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0529 10:24:01.790245    1052 provision.go:138] copyHostCerts
I0529 10:24:01.790308    1052 exec_runner.go:144] found /home/anjalibathla33951/.minikube/ca.pem, removing ...
I0529 10:24:01.790313    1052 exec_runner.go:207] rm: /home/anjalibathla33951/.minikube/ca.pem
I0529 10:24:01.790395    1052 exec_runner.go:151] cp: /home/anjalibathla33951/.minikube/certs/ca.pem --> /home/anjalibathla33951/.minikube/ca.pem (1107 bytes)
I0529 10:24:01.790466    1052 exec_runner.go:144] found /home/anjalibathla33951/.minikube/cert.pem, removing ...
I0529 10:24:01.790470    1052 exec_runner.go:207] rm: /home/anjalibathla33951/.minikube/cert.pem
I0529 10:24:01.790494    1052 exec_runner.go:151] cp: /home/anjalibathla33951/.minikube/certs/cert.pem --> /home/anjalibathla33951/.minikube/cert.pem (1151 bytes)
I0529 10:24:01.790528    1052 exec_runner.go:144] found /home/anjalibathla33951/.minikube/key.pem, removing ...
I0529 10:24:01.790531    1052 exec_runner.go:207] rm: /home/anjalibathla33951/.minikube/key.pem
I0529 10:24:01.790551    1052 exec_runner.go:151] cp: /home/anjalibathla33951/.minikube/certs/key.pem --> /home/anjalibathla33951/.minikube/key.pem (1675 bytes)
I0529 10:24:01.790581    1052 provision.go:112] generating server cert: /home/anjalibathla33951/.minikube/machines/server.pem ca-key=/home/anjalibathla33951/.minikube/certs/ca.pem private-key=/home/anjalibathla33951/.minikube/certs/ca-key.pem org=anjalibathla33951.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0529 10:24:02.120905    1052 provision.go:172] copyRemoteCerts
I0529 10:24:02.120994    1052 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0529 10:24:02.121036    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0529 10:24:02.144741    1052 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:49855 SSHKeyPath:/home/anjalibathla33951/.minikube/machines/minikube/id_rsa Username:docker}
I0529 10:24:02.244961    1052 ssh_runner.go:362] scp /home/anjalibathla33951/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1107 bytes)
I0529 10:24:02.268603    1052 ssh_runner.go:362] scp /home/anjalibathla33951/.minikube/machines/server.pem --> /etc/docker/server.pem (1229 bytes)
I0529 10:24:02.285510    1052 ssh_runner.go:362] scp /home/anjalibathla33951/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0529 10:24:02.302873    1052 provision.go:86] duration metric: configureAuth took 534.438834ms
I0529 10:24:02.302889    1052 ubuntu.go:193] setting minikube options for container-runtime
I0529 10:24:02.303043    1052 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.26.3
I0529 10:24:02.303085    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0529 10:24:02.323043    1052 main.go:141] libmachine: Using SSH client type: native
I0529 10:24:02.323352    1052 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x80e3e0] 0x811480 <nil>  [] 0s} 127.0.0.1 49855 <nil> <nil>}
I0529 10:24:02.323359    1052 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0529 10:24:02.449865    1052 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0529 10:24:02.449883    1052 ubuntu.go:71] root file system type: overlay
I0529 10:24:02.449982    1052 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0529 10:24:02.450047    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0529 10:24:02.472554    1052 main.go:141] libmachine: Using SSH client type: native
I0529 10:24:02.473042    1052 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x80e3e0] 0x811480 <nil>  [] 0s} 127.0.0.1 49855 <nil> <nil>}
I0529 10:24:02.473107    1052 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0529 10:24:02.618063    1052 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0529 10:24:02.618138    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0529 10:24:02.639242    1052 main.go:141] libmachine: Using SSH client type: native
I0529 10:24:02.639613    1052 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x80e3e0] 0x811480 <nil>  [] 0s} 127.0.0.1 49855 <nil> <nil>}
I0529 10:24:02.639623    1052 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0529 10:24:03.462268    1052 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2023-03-27 16:16:18.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2023-05-29 01:24:02.611017386 +0000
@@ -1,30 +1,32 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
@@ -32,16 +34,16 @@
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0529 10:24:03.462290    1052 machine.go:91] provisioned docker machine in 2.029194917s
I0529 10:24:03.462300    1052 client.go:171] LocalClient.Create took 12.216075449s
I0529 10:24:03.462320    1052 start.go:167] duration metric: libmachine.API.Create for "minikube" took 12.216142943s
I0529 10:24:03.462327    1052 start.go:300] post-start starting for "minikube" (driver="docker")
I0529 10:24:03.462333    1052 start.go:328] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0529 10:24:03.462407    1052 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0529 10:24:03.462448    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0529 10:24:03.485984    1052 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:49855 SSHKeyPath:/home/anjalibathla33951/.minikube/machines/minikube/id_rsa Username:docker}
I0529 10:24:03.536257    1052 ssh_runner.go:195] Run: cat /etc/os-release
I0529 10:24:03.539334    1052 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0529 10:24:03.539345    1052 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0529 10:24:03.539352    1052 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0529 10:24:03.539358    1052 info.go:137] Remote host: Ubuntu 20.04.5 LTS
I0529 10:24:03.539368    1052 filesync.go:126] Scanning /home/anjalibathla33951/.minikube/addons for local assets ...
I0529 10:24:03.539410    1052 filesync.go:126] Scanning /home/anjalibathla33951/.minikube/files for local assets ...
I0529 10:24:03.539420    1052 start.go:303] post-start completed in 77.088535ms
I0529 10:24:03.539666    1052 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0529 10:24:03.559550    1052 profile.go:148] Saving config to /home/anjalibathla33951/.minikube/profiles/minikube/config.json ...
I0529 10:24:03.559787    1052 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0529 10:24:03.559885    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0529 10:24:03.582140    1052 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:49855 SSHKeyPath:/home/anjalibathla33951/.minikube/machines/minikube/id_rsa Username:docker}
I0529 10:24:03.652314    1052 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0529 10:24:03.658007    1052 start.go:128] duration metric: createHost completed in 12.419017443s
I0529 10:24:03.658024    1052 start.go:83] releasing machines lock for "minikube", held for 12.419225967s
I0529 10:24:03.658107    1052 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0529 10:24:03.690566    1052 ssh_runner.go:195] Run: cat /version.json
I0529 10:24:03.690612    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0529 10:24:03.690666    1052 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0529 10:24:03.690720    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0529 10:24:03.716071    1052 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:49855 SSHKeyPath:/home/anjalibathla33951/.minikube/machines/minikube/id_rsa Username:docker}
I0529 10:24:03.719276    1052 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:49855 SSHKeyPath:/home/anjalibathla33951/.minikube/machines/minikube/id_rsa Username:docker}
I0529 10:24:04.051767    1052 ssh_runner.go:195] Run: systemctl --version
I0529 10:24:04.055919    1052 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0529 10:24:04.059891    1052 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
I0529 10:24:04.080806    1052 cni.go:229] loopback cni configuration patched: "/etc/cni/net.d/*loopback.conf*" found
I0529 10:24:04.080861    1052 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0529 10:24:04.102478    1052 cni.go:261] disabled [/etc/cni/net.d/100-crio-bridge.conf] bridge cni config(s)
I0529 10:24:04.102513    1052 start.go:481] detecting cgroup driver to use...
I0529 10:24:04.102551    1052 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0529 10:24:04.102665    1052 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0529 10:24:04.116926    1052 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0529 10:24:04.126147    1052 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0529 10:24:04.137869    1052 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I0529 10:24:04.137944    1052 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0529 10:24:04.150049    1052 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0529 10:24:04.161782    1052 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0529 10:24:04.174120    1052 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0529 10:24:04.183949    1052 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0529 10:24:04.194327    1052 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0529 10:24:04.204348    1052 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0529 10:24:04.211413    1052 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0529 10:24:04.219426    1052 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0529 10:24:04.312529    1052 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0529 10:24:04.433845    1052 start.go:481] detecting cgroup driver to use...
I0529 10:24:04.433885    1052 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0529 10:24:04.433940    1052 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0529 10:24:04.444154    1052 cruntime.go:276] skipping containerd shutdown because we are bound to it
I0529 10:24:04.444230    1052 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0529 10:24:04.456534    1052 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0529 10:24:04.472034    1052 ssh_runner.go:195] Run: which cri-dockerd
I0529 10:24:04.475783    1052 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0529 10:24:04.510738    1052 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0529 10:24:04.525273    1052 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0529 10:24:04.635791    1052 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0529 10:24:04.749327    1052 docker.go:538] configuring docker to use "cgroupfs" as cgroup driver...
I0529 10:24:04.749354    1052 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (144 bytes)
I0529 10:24:04.766201    1052 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0529 10:24:04.860913    1052 ssh_runner.go:195] Run: sudo systemctl restart docker
I0529 10:24:05.142470    1052 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0529 10:24:05.241686    1052 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0529 10:24:05.321138    1052 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0529 10:24:05.408500    1052 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0529 10:24:05.504875    1052 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0529 10:24:05.520430    1052 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0529 10:24:05.611870    1052 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I0529 10:24:05.691993    1052 start.go:528] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0529 10:24:05.692080    1052 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0529 10:24:05.696862    1052 start.go:549] Will wait 60s for crictl version
I0529 10:24:05.696921    1052 ssh_runner.go:195] Run: which crictl
I0529 10:24:05.700361    1052 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0529 10:24:05.785208    1052 start.go:565] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  23.0.2
RuntimeApiVersion:  v1alpha2
I0529 10:24:05.785271    1052 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0529 10:24:05.807280    1052 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0529 10:24:05.834815    1052 out.go:204] 🐳  Preparing Kubernetes v1.26.3 on Docker 23.0.2 ...
I0529 10:24:05.835021    1052 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0529 10:24:05.851544    1052 ssh_runner.go:195] Run: grep 192.168.49.1	host.minikube.internal$ /etc/hosts
I0529 10:24:05.855356    1052 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.49.1	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0529 10:24:05.866521    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0529 10:24:05.886496    1052 preload.go:132] Checking if preload exists for k8s version v1.26.3 and runtime docker
I0529 10:24:05.886536    1052 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0529 10:24:05.904010    1052 docker.go:639] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.26.3
registry.k8s.io/kube-scheduler:v1.26.3
registry.k8s.io/kube-controller-manager:v1.26.3
registry.k8s.io/kube-proxy:v1.26.3
registry.k8s.io/etcd:3.5.6-0
registry.k8s.io/pause:3.9
registry.k8s.io/coredns/coredns:v1.9.3
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0529 10:24:05.904028    1052 docker.go:569] Images already preloaded, skipping extraction
I0529 10:24:05.904097    1052 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0529 10:24:05.922452    1052 docker.go:639] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.26.3
registry.k8s.io/kube-controller-manager:v1.26.3
registry.k8s.io/kube-scheduler:v1.26.3
registry.k8s.io/kube-proxy:v1.26.3
registry.k8s.io/etcd:3.5.6-0
registry.k8s.io/pause:3.9
registry.k8s.io/coredns/coredns:v1.9.3
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0529 10:24:05.922471    1052 cache_images.go:84] Images are preloaded, skipping loading
I0529 10:24:05.922533    1052 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0529 10:24:05.946287    1052 cni.go:84] Creating CNI manager for ""
I0529 10:24:05.946298    1052 cni.go:157] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0529 10:24:05.946308    1052 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0529 10:24:05.946318    1052 kubeadm.go:172] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.26.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m]}
I0529 10:24:05.946467    1052 kubeadm.go:177] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: /var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.26.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0529 10:24:05.946520    1052 kubeadm.go:968] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.26.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.26.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0529 10:24:05.946581    1052 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.26.3
I0529 10:24:05.954595    1052 binaries.go:44] Found k8s binaries, skipping transfer
I0529 10:24:05.954657    1052 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0529 10:24:05.962189    1052 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (369 bytes)
I0529 10:24:05.975519    1052 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0529 10:24:05.988237    1052 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2084 bytes)
I0529 10:24:06.002658    1052 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0529 10:24:06.007371    1052 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0529 10:24:06.018367    1052 certs.go:56] Setting up /home/anjalibathla33951/.minikube/profiles/minikube for IP: 192.168.49.2
I0529 10:24:06.018426    1052 certs.go:186] acquiring lock for shared ca certs: {Name:mkc2d08b6d21b440dadaa1c3c26e83a44a1b2382 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0529 10:24:06.018595    1052 certs.go:195] skipping minikubeCA CA generation: /home/anjalibathla33951/.minikube/ca.key
I0529 10:24:06.018637    1052 certs.go:195] skipping proxyClientCA CA generation: /home/anjalibathla33951/.minikube/proxy-client-ca.key
I0529 10:24:06.018669    1052 certs.go:315] generating minikube-user signed cert: /home/anjalibathla33951/.minikube/profiles/minikube/client.key
I0529 10:24:06.018680    1052 crypto.go:68] Generating cert /home/anjalibathla33951/.minikube/profiles/minikube/client.crt with IP's: []
I0529 10:24:06.104515    1052 crypto.go:156] Writing cert to /home/anjalibathla33951/.minikube/profiles/minikube/client.crt ...
I0529 10:24:06.104538    1052 lock.go:35] WriteFile acquiring /home/anjalibathla33951/.minikube/profiles/minikube/client.crt: {Name:mk8a846db8e159c4fd543d418d5d66df30e34338 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0529 10:24:06.104735    1052 crypto.go:164] Writing key to /home/anjalibathla33951/.minikube/profiles/minikube/client.key ...
I0529 10:24:06.104739    1052 lock.go:35] WriteFile acquiring /home/anjalibathla33951/.minikube/profiles/minikube/client.key: {Name:mk11d32b3056b6b7d2a753cf572f85f1ed54ffe5 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0529 10:24:06.104820    1052 certs.go:315] generating minikube signed cert: /home/anjalibathla33951/.minikube/profiles/minikube/apiserver.key.dd3b5fb2
I0529 10:24:06.104826    1052 crypto.go:68] Generating cert /home/anjalibathla33951/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2 with IP's: [192.168.49.2 10.96.0.1 127.0.0.1 10.0.0.1]
I0529 10:24:06.252488    1052 crypto.go:156] Writing cert to /home/anjalibathla33951/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2 ...
I0529 10:24:06.252504    1052 lock.go:35] WriteFile acquiring /home/anjalibathla33951/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2: {Name:mk826b4643d97425d8fdd9764c38411aab759b3e Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0529 10:24:06.252689    1052 crypto.go:164] Writing key to /home/anjalibathla33951/.minikube/profiles/minikube/apiserver.key.dd3b5fb2 ...
I0529 10:24:06.252695    1052 lock.go:35] WriteFile acquiring /home/anjalibathla33951/.minikube/profiles/minikube/apiserver.key.dd3b5fb2: {Name:mkf6cd2ac411580530ede07a107dde35cb22ddea Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0529 10:24:06.252772    1052 certs.go:333] copying /home/anjalibathla33951/.minikube/profiles/minikube/apiserver.crt.dd3b5fb2 -> /home/anjalibathla33951/.minikube/profiles/minikube/apiserver.crt
I0529 10:24:06.252832    1052 certs.go:337] copying /home/anjalibathla33951/.minikube/profiles/minikube/apiserver.key.dd3b5fb2 -> /home/anjalibathla33951/.minikube/profiles/minikube/apiserver.key
I0529 10:24:06.252870    1052 certs.go:315] generating aggregator signed cert: /home/anjalibathla33951/.minikube/profiles/minikube/proxy-client.key
I0529 10:24:06.252881    1052 crypto.go:68] Generating cert /home/anjalibathla33951/.minikube/profiles/minikube/proxy-client.crt with IP's: []
I0529 10:24:06.364629    1052 crypto.go:156] Writing cert to /home/anjalibathla33951/.minikube/profiles/minikube/proxy-client.crt ...
I0529 10:24:06.364642    1052 lock.go:35] WriteFile acquiring /home/anjalibathla33951/.minikube/profiles/minikube/proxy-client.crt: {Name:mk86fc11440ed3ec69ccc4a85e3a28dde73524f2 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0529 10:24:06.364837    1052 crypto.go:164] Writing key to /home/anjalibathla33951/.minikube/profiles/minikube/proxy-client.key ...
I0529 10:24:06.364842    1052 lock.go:35] WriteFile acquiring /home/anjalibathla33951/.minikube/profiles/minikube/proxy-client.key: {Name:mk098afa81a506d924e3e56a29d66641481f4800 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0529 10:24:06.365019    1052 certs.go:401] found cert: /home/anjalibathla33951/.minikube/certs/home/anjalibathla33951/.minikube/certs/ca-key.pem (1675 bytes)
I0529 10:24:06.365044    1052 certs.go:401] found cert: /home/anjalibathla33951/.minikube/certs/home/anjalibathla33951/.minikube/certs/ca.pem (1107 bytes)
I0529 10:24:06.365057    1052 certs.go:401] found cert: /home/anjalibathla33951/.minikube/certs/home/anjalibathla33951/.minikube/certs/cert.pem (1151 bytes)
I0529 10:24:06.365067    1052 certs.go:401] found cert: /home/anjalibathla33951/.minikube/certs/home/anjalibathla33951/.minikube/certs/key.pem (1675 bytes)
I0529 10:24:06.365520    1052 ssh_runner.go:362] scp /home/anjalibathla33951/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0529 10:24:06.390816    1052 ssh_runner.go:362] scp /home/anjalibathla33951/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1679 bytes)
I0529 10:24:06.415682    1052 ssh_runner.go:362] scp /home/anjalibathla33951/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0529 10:24:06.439997    1052 ssh_runner.go:362] scp /home/anjalibathla33951/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1675 bytes)
I0529 10:24:06.463191    1052 ssh_runner.go:362] scp /home/anjalibathla33951/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0529 10:24:06.481749    1052 ssh_runner.go:362] scp /home/anjalibathla33951/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1675 bytes)
I0529 10:24:06.504200    1052 ssh_runner.go:362] scp /home/anjalibathla33951/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0529 10:24:06.523858    1052 ssh_runner.go:362] scp /home/anjalibathla33951/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0529 10:24:06.542672    1052 ssh_runner.go:362] scp /home/anjalibathla33951/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0529 10:24:06.562280    1052 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0529 10:24:06.575824    1052 ssh_runner.go:195] Run: openssl version
I0529 10:24:06.582213    1052 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0529 10:24:06.590360    1052 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0529 10:24:06.593776    1052 certs.go:444] hashing: -rw-r--r-- 1 root root 1111 Mar 13 07:36 /usr/share/ca-certificates/minikubeCA.pem
I0529 10:24:06.593820    1052 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0529 10:24:06.598913    1052 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0529 10:24:06.606638    1052 kubeadm.go:401] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 Memory:2200 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.26.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.26.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/home/anjalibathla33951:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP:}
I0529 10:24:06.606736    1052 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0529 10:24:06.622208    1052 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0529 10:24:06.630876    1052 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0529 10:24:06.639103    1052 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I0529 10:24:06.639190    1052 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0529 10:24:06.648300    1052 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0529 10:24:06.648332    1052 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0529 10:24:06.700328    1052 kubeadm.go:322] [init] Using Kubernetes version: v1.26.3
I0529 10:24:06.700383    1052 kubeadm.go:322] [preflight] Running pre-flight checks
I0529 10:24:06.805744    1052 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I0529 10:24:06.805875    1052 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0529 10:24:06.805993    1052 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0529 10:24:06.930674    1052 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0529 10:24:06.945201    1052 out.go:204]     ▪ Generating certificates and keys ...
I0529 10:24:06.945506    1052 kubeadm.go:322] [certs] Using existing ca certificate authority
I0529 10:24:06.945615    1052 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I0529 10:24:07.078741    1052 kubeadm.go:322] [certs] Generating "apiserver-kubelet-client" certificate and key
I0529 10:24:07.398519    1052 kubeadm.go:322] [certs] Generating "front-proxy-ca" certificate and key
I0529 10:24:07.604033    1052 kubeadm.go:322] [certs] Generating "front-proxy-client" certificate and key
I0529 10:24:07.808539    1052 kubeadm.go:322] [certs] Generating "etcd/ca" certificate and key
I0529 10:24:08.034949    1052 kubeadm.go:322] [certs] Generating "etcd/server" certificate and key
I0529 10:24:08.035025    1052 kubeadm.go:322] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0529 10:24:08.139085    1052 kubeadm.go:322] [certs] Generating "etcd/peer" certificate and key
I0529 10:24:08.139183    1052 kubeadm.go:322] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0529 10:24:08.242298    1052 kubeadm.go:322] [certs] Generating "etcd/healthcheck-client" certificate and key
I0529 10:24:08.357659    1052 kubeadm.go:322] [certs] Generating "apiserver-etcd-client" certificate and key
I0529 10:24:08.460826    1052 kubeadm.go:322] [certs] Generating "sa" key and public key
I0529 10:24:08.460886    1052 kubeadm.go:322] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0529 10:24:08.695085    1052 kubeadm.go:322] [kubeconfig] Writing "admin.conf" kubeconfig file
I0529 10:24:08.843644    1052 kubeadm.go:322] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0529 10:24:08.925210    1052 kubeadm.go:322] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0529 10:24:09.165413    1052 kubeadm.go:322] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0529 10:24:09.178358    1052 kubeadm.go:322] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0529 10:24:09.179022    1052 kubeadm.go:322] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0529 10:24:09.179075    1052 kubeadm.go:322] [kubelet-start] Starting the kubelet
I0529 10:24:09.267253    1052 kubeadm.go:322] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0529 10:24:09.275737    1052 out.go:204]     ▪ Booting up control plane ...
I0529 10:24:09.275947    1052 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0529 10:24:09.276043    1052 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0529 10:24:09.276128    1052 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0529 10:24:09.276224    1052 kubeadm.go:322] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0529 10:24:09.276361    1052 kubeadm.go:322] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
I0529 10:24:16.277075    1052 kubeadm.go:322] [apiclient] All control plane components are healthy after 7.001796 seconds
I0529 10:24:16.277187    1052 kubeadm.go:322] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0529 10:24:16.312638    1052 kubeadm.go:322] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0529 10:24:16.854278    1052 kubeadm.go:322] [upload-certs] Skipping phase. Please see --upload-certs
I0529 10:24:16.854468    1052 kubeadm.go:322] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0529 10:24:17.369236    1052 kubeadm.go:322] [bootstrap-token] Using token: thkjfu.ail3451xyt53jr62
I0529 10:24:17.377208    1052 out.go:204]     ▪ Configuring RBAC rules ...
I0529 10:24:17.377371    1052 kubeadm.go:322] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0529 10:24:17.382489    1052 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0529 10:24:17.395104    1052 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0529 10:24:17.402372    1052 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0529 10:24:17.410944    1052 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0529 10:24:17.417165    1052 kubeadm.go:322] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0529 10:24:17.445073    1052 kubeadm.go:322] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0529 10:24:17.833884    1052 kubeadm.go:322] [addons] Applied essential addon: CoreDNS
I0529 10:24:17.920284    1052 kubeadm.go:322] [addons] Applied essential addon: kube-proxy
I0529 10:24:17.921780    1052 kubeadm.go:322] 
I0529 10:24:17.921849    1052 kubeadm.go:322] Your Kubernetes control-plane has initialized successfully!
I0529 10:24:17.921854    1052 kubeadm.go:322] 
I0529 10:24:17.921942    1052 kubeadm.go:322] To start using your cluster, you need to run the following as a regular user:
I0529 10:24:17.921950    1052 kubeadm.go:322] 
I0529 10:24:17.921972    1052 kubeadm.go:322]   mkdir -p $HOME/.kube
I0529 10:24:17.922024    1052 kubeadm.go:322]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0529 10:24:17.922058    1052 kubeadm.go:322]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0529 10:24:17.922061    1052 kubeadm.go:322] 
I0529 10:24:17.922108    1052 kubeadm.go:322] Alternatively, if you are the root user, you can run:
I0529 10:24:17.922111    1052 kubeadm.go:322] 
I0529 10:24:17.922145    1052 kubeadm.go:322]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0529 10:24:17.922147    1052 kubeadm.go:322] 
I0529 10:24:17.922193    1052 kubeadm.go:322] You should now deploy a pod network to the cluster.
I0529 10:24:17.922237    1052 kubeadm.go:322] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0529 10:24:17.922288    1052 kubeadm.go:322]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0529 10:24:17.922291    1052 kubeadm.go:322] 
I0529 10:24:17.922367    1052 kubeadm.go:322] You can now join any number of control-plane nodes by copying certificate authorities
I0529 10:24:17.922436    1052 kubeadm.go:322] and service account keys on each node and then running the following as root:
I0529 10:24:17.922440    1052 kubeadm.go:322] 
I0529 10:24:17.922526    1052 kubeadm.go:322]   kubeadm join control-plane.minikube.internal:8443 --token thkjfu.ail3451xyt53jr62 \
I0529 10:24:17.922623    1052 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:e742fded01b2476faa8ad85f59265c4b106f40ad5051e3681fe4a101ca5623c0 \
I0529 10:24:17.922641    1052 kubeadm.go:322] 	--control-plane 
I0529 10:24:17.922648    1052 kubeadm.go:322] 
I0529 10:24:17.922729    1052 kubeadm.go:322] Then you can join any number of worker nodes by running the following on each as root:
I0529 10:24:17.922733    1052 kubeadm.go:322] 
I0529 10:24:17.922816    1052 kubeadm.go:322] kubeadm join control-plane.minikube.internal:8443 --token thkjfu.ail3451xyt53jr62 \
I0529 10:24:17.922924    1052 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:e742fded01b2476faa8ad85f59265c4b106f40ad5051e3681fe4a101ca5623c0 
I0529 10:24:17.929315    1052 kubeadm.go:322] W0529 01:24:06.692425    1411 initconfiguration.go:119] Usage of CRI endpoints without URL scheme is deprecated and can cause kubelet errors in the future. Automatically prepending scheme "unix" to the "criSocket" with value "/var/run/cri-dockerd.sock". Please update your configuration!
I0529 10:24:17.929460    1052 kubeadm.go:322] 	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
I0529 10:24:17.929606    1052 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0529 10:24:17.929643    1052 cni.go:84] Creating CNI manager for ""
I0529 10:24:17.929660    1052 cni.go:157] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0529 10:24:17.940437    1052 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0529 10:24:17.950520    1052 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0529 10:24:18.015559    1052 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (457 bytes)
I0529 10:24:18.031643    1052 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0529 10:24:18.031782    1052 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.26.3/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0529 10:24:18.031847    1052 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.26.3/kubectl label nodes minikube.k8s.io/version=v1.30.1 minikube.k8s.io/commit=08896fd1dc362c097c925146c4a0d0dac715ace0 minikube.k8s.io/name=minikube minikube.k8s.io/updated_at=2023_05_29T10_24_18_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig
I0529 10:24:18.105084    1052 ops.go:34] apiserver oom_adj: -16
I0529 10:24:18.509425    1052 kubeadm.go:1073] duration metric: took 477.690115ms to wait for elevateKubeSystemPrivileges.
I0529 10:24:18.531517    1052 kubeadm.go:403] StartCluster complete in 11.924998532s
I0529 10:24:18.531548    1052 settings.go:142] acquiring lock: {Name:mk6e4f448839ee2bd36a52db6ec4335dd3c5b2f4 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0529 10:24:18.531650    1052 settings.go:150] Updating kubeconfig:  /home/anjalibathla33951/.kube/config
I0529 10:24:18.532332    1052 lock.go:35] WriteFile acquiring /home/anjalibathla33951/.kube/config: {Name:mk448c91a907591560c4441fb662950f878489ff Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0529 10:24:18.532681    1052 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0529 10:24:18.532716    1052 addons.go:496] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false istio:false istio-provisioner:false kong:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false volumesnapshots:false]
I0529 10:24:18.532774    1052 addons.go:66] Setting storage-provisioner=true in profile "minikube"
I0529 10:24:18.532793    1052 addons.go:66] Setting default-storageclass=true in profile "minikube"
I0529 10:24:18.532808    1052 addons.go:228] Setting addon storage-provisioner=true in "minikube"
I0529 10:24:18.532810    1052 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0529 10:24:18.532843    1052 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.26.3
I0529 10:24:18.532871    1052 host.go:66] Checking if "minikube" exists ...
I0529 10:24:18.533092    1052 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0529 10:24:18.533199    1052 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0529 10:24:18.576573    1052 addons.go:228] Setting addon default-storageclass=true in "minikube"
I0529 10:24:18.576612    1052 host.go:66] Checking if "minikube" exists ...
I0529 10:24:18.576982    1052 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0529 10:24:18.589586    1052 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0529 10:24:18.598374    1052 addons.go:420] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0529 10:24:18.598388    1052 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0529 10:24:18.598459    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0529 10:24:18.601773    1052 addons.go:420] installing /etc/kubernetes/addons/storageclass.yaml
I0529 10:24:18.601785    1052 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0529 10:24:18.601832    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0529 10:24:18.627592    1052 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:49855 SSHKeyPath:/home/anjalibathla33951/.minikube/machines/minikube/id_rsa Username:docker}
I0529 10:24:18.636233    1052 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:49855 SSHKeyPath:/home/anjalibathla33951/.minikube/machines/minikube/id_rsa Username:docker}
I0529 10:24:18.657362    1052 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.49.1 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.26.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0529 10:24:18.740492    1052 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.26.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0529 10:24:18.741226    1052 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.26.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0529 10:24:19.079407    1052 kapi.go:248] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0529 10:24:19.079445    1052 start.go:223] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.26.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0529 10:24:19.085881    1052 out.go:177] 🔎  Verifying Kubernetes components...
I0529 10:24:19.092167    1052 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0529 10:24:20.553101    1052 ssh_runner.go:235] Completed: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.49.1 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.26.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -": (1.895704841s)
I0529 10:24:20.553127    1052 start.go:916] {"host.minikube.internal": 192.168.49.1} host record injected into CoreDNS's ConfigMap
I0529 10:24:20.618018    1052 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.26.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml: (1.877498158s)
I0529 10:24:20.618048    1052 ssh_runner.go:235] Completed: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.26.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml: (1.876806852s)
I0529 10:24:20.618388    1052 ssh_runner.go:235] Completed: sudo systemctl is-active --quiet service kubelet: (1.526196069s)
I0529 10:24:20.629658    1052 out.go:177] 🌟  Enabled addons: storage-provisioner, default-storageclass
I0529 10:24:20.618447    1052 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0529 10:24:20.636776    1052 addons.go:499] enable addons completed in 2.104036759s: enabled=[storage-provisioner default-storageclass]
I0529 10:24:20.665158    1052 api_server.go:51] waiting for apiserver process to appear ...
I0529 10:24:20.665188    1052 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0529 10:24:20.675766    1052 api_server.go:71] duration metric: took 1.596282296s to wait for apiserver process to appear ...
I0529 10:24:20.675779    1052 api_server.go:87] waiting for apiserver healthz status ...
I0529 10:24:20.675786    1052 api_server.go:252] Checking apiserver healthz at https://127.0.0.1:49859/healthz ...
I0529 10:24:20.681248    1052 api_server.go:278] https://127.0.0.1:49859/healthz returned 200:
ok
I0529 10:24:20.682476    1052 api_server.go:140] control plane version: v1.26.3
I0529 10:24:20.682488    1052 api_server.go:130] duration metric: took 6.705744ms to wait for apiserver health ...
I0529 10:24:20.682494    1052 system_pods.go:43] waiting for kube-system pods to appear ...
I0529 10:24:20.687643    1052 system_pods.go:59] 5 kube-system pods found
I0529 10:24:20.687657    1052 system_pods.go:61] "etcd-minikube" [38d50f81-999e-4bc4-a033-ef7c7879be38] Pending
I0529 10:24:20.687660    1052 system_pods.go:61] "kube-apiserver-minikube" [1afbaf3f-305c-43d5-9137-69e9761e6985] Pending
I0529 10:24:20.687662    1052 system_pods.go:61] "kube-controller-manager-minikube" [b5d322c3-e47a-4e48-8c0d-079524e357d7] Running
I0529 10:24:20.687665    1052 system_pods.go:61] "kube-scheduler-minikube" [918fdf2c-b8f9-4064-8939-696b985c98fc] Pending
I0529 10:24:20.687669    1052 system_pods.go:61] "storage-provisioner" [127a1295-9c99-4aba-b54c-644d1779c12a] Pending: PodScheduled:Unschedulable (0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..)
I0529 10:24:20.687675    1052 system_pods.go:74] duration metric: took 5.176715ms to wait for pod list to return data ...
I0529 10:24:20.687683    1052 kubeadm.go:578] duration metric: took 1.60820442s to wait for : map[apiserver:true system_pods:true] ...
I0529 10:24:20.687692    1052 node_conditions.go:102] verifying NodePressure condition ...
I0529 10:24:20.690749    1052 node_conditions.go:122] node storage ephemeral capacity is 263174212Ki
I0529 10:24:20.690760    1052 node_conditions.go:123] node cpu capacity is 8
I0529 10:24:20.690768    1052 node_conditions.go:105] duration metric: took 3.073144ms to run NodePressure ...
I0529 10:24:20.690776    1052 start.go:228] waiting for startup goroutines ...
I0529 10:24:20.690780    1052 start.go:233] waiting for cluster config update ...
I0529 10:24:20.690787    1052 start.go:242] writing updated cluster config ...
I0529 10:24:20.691046    1052 ssh_runner.go:195] Run: rm -f paused
I0529 10:24:20.732713    1052 start.go:568] kubectl: 1.25.9, cluster: 1.26.3 (minor skew: 1)
I0529 10:24:20.738865    1052 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default

* 
* ==> Docker <==
* -- Logs begin at Mon 2023-05-29 01:24:01 UTC, end at Mon 2023-05-29 01:25:51 UTC. --
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.907694313Z" level=info msg="Starting up"
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.909266198Z" level=info msg="[core] [Channel #1] Channel created" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.909301968Z" level=info msg="[core] [Channel #1] original dial target is: \"unix:///run/containerd/containerd.sock\"" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.909322226Z" level=info msg="[core] [Channel #1] parsed dial target is: {Scheme:unix Authority: Endpoint:run/containerd/containerd.sock URL:{Scheme:unix Opaque: User: Host: Path:/run/containerd/containerd.sock RawPath: OmitHost:false ForceQuery:false RawQuery: Fragment: RawFragment:}}" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.909329564Z" level=info msg="[core] [Channel #1] Channel authority set to \"localhost\"" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.909413754Z" level=info msg="[core] [Channel #1] Resolver state updated: {\n  \"Addresses\": [\n    {\n      \"Addr\": \"/run/containerd/containerd.sock\",\n      \"ServerName\": \"\",\n      \"Attributes\": {},\n      \"BalancerAttributes\": null,\n      \"Type\": 0,\n      \"Metadata\": null\n    }\n  ],\n  \"ServiceConfig\": null,\n  \"Attributes\": null\n} (resolver returned new addresses)" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.909595859Z" level=info msg="[core] [Channel #1] Channel switches to new LB policy \"pick_first\"" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.909666621Z" level=info msg="[core] [Channel #1 SubChannel #2] Subchannel created" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.909702348Z" level=info msg="[core] [Channel #1 SubChannel #2] Subchannel Connectivity change to CONNECTING" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.909744973Z" level=info msg="[core] [Channel #1 SubChannel #2] Subchannel picks a new address \"/run/containerd/containerd.sock\" to connect" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.909771204Z" level=info msg="[core] [Channel #1] Channel Connectivity change to CONNECTING" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.910081728Z" level=info msg="[core] [Channel #1 SubChannel #2] Subchannel Connectivity change to READY" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.910124898Z" level=info msg="[core] [Channel #1] Channel Connectivity change to READY" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.911487245Z" level=info msg="[core] [Channel #4] Channel created" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.911522708Z" level=info msg="[core] [Channel #4] original dial target is: \"unix:///run/containerd/containerd.sock\"" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.911556009Z" level=info msg="[core] [Channel #4] parsed dial target is: {Scheme:unix Authority: Endpoint:run/containerd/containerd.sock URL:{Scheme:unix Opaque: User: Host: Path:/run/containerd/containerd.sock RawPath: OmitHost:false ForceQuery:false RawQuery: Fragment: RawFragment:}}" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.911574438Z" level=info msg="[core] [Channel #4] Channel authority set to \"localhost\"" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.911625959Z" level=info msg="[core] [Channel #4] Resolver state updated: {\n  \"Addresses\": [\n    {\n      \"Addr\": \"/run/containerd/containerd.sock\",\n      \"ServerName\": \"\",\n      \"Attributes\": {},\n      \"BalancerAttributes\": null,\n      \"Type\": 0,\n      \"Metadata\": null\n    }\n  ],\n  \"ServiceConfig\": null,\n  \"Attributes\": null\n} (resolver returned new addresses)" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.911681049Z" level=info msg="[core] [Channel #4] Channel switches to new LB policy \"pick_first\"" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.911730398Z" level=info msg="[core] [Channel #4 SubChannel #5] Subchannel created" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.911773787Z" level=info msg="[core] [Channel #4 SubChannel #5] Subchannel Connectivity change to CONNECTING" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.911800508Z" level=info msg="[core] [Channel #4 SubChannel #5] Subchannel picks a new address \"/run/containerd/containerd.sock\" to connect" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.911922622Z" level=info msg="[core] [Channel #4] Channel Connectivity change to CONNECTING" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.912237103Z" level=info msg="[core] [Channel #4 SubChannel #5] Subchannel Connectivity change to READY" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.912309237Z" level=info msg="[core] [Channel #4] Channel Connectivity change to READY" module=grpc
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.913224993Z" level=info msg="[graphdriver] trying configured driver: overlay2"
May 29 01:24:04 minikube dockerd[956]: time="2023-05-29T01:24:04.952014900Z" level=info msg="Loading containers: start."
May 29 01:24:05 minikube dockerd[956]: time="2023-05-29T01:24:05.051431012Z" level=info msg="Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address"
May 29 01:24:05 minikube dockerd[956]: time="2023-05-29T01:24:05.096898123Z" level=info msg="Loading containers: done."
May 29 01:24:05 minikube dockerd[956]: time="2023-05-29T01:24:05.112995077Z" level=warning msg="WARNING: No blkio throttle.read_bps_device support"
May 29 01:24:05 minikube dockerd[956]: time="2023-05-29T01:24:05.113055669Z" level=warning msg="WARNING: No blkio throttle.write_bps_device support"
May 29 01:24:05 minikube dockerd[956]: time="2023-05-29T01:24:05.113062747Z" level=warning msg="WARNING: No blkio throttle.read_iops_device support"
May 29 01:24:05 minikube dockerd[956]: time="2023-05-29T01:24:05.113067187Z" level=warning msg="WARNING: No blkio throttle.write_iops_device support"
May 29 01:24:05 minikube dockerd[956]: time="2023-05-29T01:24:05.113088084Z" level=info msg="Docker daemon" commit=219f21b graphdriver=overlay2 version=23.0.2
May 29 01:24:05 minikube dockerd[956]: time="2023-05-29T01:24:05.113130086Z" level=info msg="Daemon has completed initialization"
May 29 01:24:05 minikube dockerd[956]: time="2023-05-29T01:24:05.140023738Z" level=info msg="[core] [Server #7] Server created" module=grpc
May 29 01:24:05 minikube systemd[1]: Started Docker Application Container Engine.
May 29 01:24:05 minikube dockerd[956]: time="2023-05-29T01:24:05.143169698Z" level=info msg="API listen on [::]:2376"
May 29 01:24:05 minikube dockerd[956]: time="2023-05-29T01:24:05.148740236Z" level=info msg="API listen on /var/run/docker.sock"
May 29 01:24:05 minikube systemd[1]: Starting CRI Interface for Docker Application Container Engine...
May 29 01:24:05 minikube cri-dockerd[1171]: time="2023-05-29T01:24:05Z" level=info msg="Connecting to docker on the Endpoint unix:///var/run/docker.sock"
May 29 01:24:05 minikube cri-dockerd[1171]: time="2023-05-29T01:24:05Z" level=info msg="Start docker client with request timeout 0s"
May 29 01:24:05 minikube cri-dockerd[1171]: time="2023-05-29T01:24:05Z" level=info msg="Hairpin mode is set to hairpin-veth"
May 29 01:24:05 minikube cri-dockerd[1171]: time="2023-05-29T01:24:05Z" level=info msg="Loaded network plugin cni"
May 29 01:24:05 minikube cri-dockerd[1171]: time="2023-05-29T01:24:05Z" level=info msg="Docker cri networking managed by network plugin cni"
May 29 01:24:05 minikube cri-dockerd[1171]: time="2023-05-29T01:24:05Z" level=info msg="Docker Info: &{ID:f2287b42-0637-4003-a474-5cd11f7c5b47 Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:8 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:[] Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:[] Log:[awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:true KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6tables:true Debug:false NFd:24 OomKillDisable:true NGoroutines:32 SystemTime:2023-05-29T01:24:05.68284015Z LoggingDriver:json-file CgroupDriver:cgroupfs CgroupVersion:1 NEventsListener:0 KernelVersion:5.10.102.1-microsoft-standard-WSL2 OperatingSystem:Ubuntu 20.04.5 LTS (containerized) OSVersion:20.04 OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:0xc000224000 NCPU:8 MemTotal:8169500672 GenericResources:[] DockerRootDir:/var/lib/docker HTTPProxy: HTTPSProxy: NoProxy:control-plane.minikube.internal Name:minikube Labels:[provider=docker] ExperimentalBuild:false ServerVersion:23.0.2 ClusterStore: ClusterAdvertise: Runtimes:map[io.containerd.runc.v2:{Path:runc Args:[] Shim:<nil>} runc:{Path:runc Args:[] Shim:<nil>}] DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:[] Nodes:0 Managers:0 Cluster:<nil> Warnings:[]} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:2806fc1057397dbaeefbea0e4e17bddfbd388f38 Expected:2806fc1057397dbaeefbea0e4e17bddfbd388f38} RuncCommit:{ID:v1.1.5-0-gf19387a Expected:v1.1.5-0-gf19387a} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=builtin] ProductLicense: DefaultAddressPools:[] Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support]}"
May 29 01:24:05 minikube cri-dockerd[1171]: time="2023-05-29T01:24:05Z" level=info msg="Setting cgroupDriver cgroupfs"
May 29 01:24:05 minikube cri-dockerd[1171]: time="2023-05-29T01:24:05Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:,},}"
May 29 01:24:05 minikube cri-dockerd[1171]: time="2023-05-29T01:24:05Z" level=info msg="Starting the GRPC backend for the Docker CRI interface."
May 29 01:24:05 minikube cri-dockerd[1171]: time="2023-05-29T01:24:05Z" level=info msg="Start cri-dockerd grpc backend"
May 29 01:24:05 minikube systemd[1]: Started CRI Interface for Docker Application Container Engine.
May 29 01:24:10 minikube cri-dockerd[1171]: time="2023-05-29T01:24:10Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/a8506164e907c30b35e24a7d999f57aa7fd920a10135e02d24bbfbe6feebe052/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
May 29 01:24:10 minikube cri-dockerd[1171]: time="2023-05-29T01:24:10Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/cb6e804770627d4cb947694cec6243fdf3eb03511c49209b1dcbcd1d3c7bf921/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
May 29 01:24:10 minikube cri-dockerd[1171]: time="2023-05-29T01:24:10Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/5dc21f78de792acef0511a0e29fdc26bd4886ec1e7f51bf5bf9d0b7290af055c/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
May 29 01:24:10 minikube cri-dockerd[1171]: time="2023-05-29T01:24:10Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/fd282ee2c996b3df36dbbf893848ead03fba53eb836fe14f77025dda9902f759/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
May 29 01:24:31 minikube cri-dockerd[1171]: time="2023-05-29T01:24:31Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/03707f507c4186ec1437b26ceb633fb10d702f03214fa0f25d50443313b892fc/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
May 29 01:24:31 minikube cri-dockerd[1171]: time="2023-05-29T01:24:31Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/5e19a925c7b895b7b77ff88a6dee96eea6d2492df4de00a31b753626de1537f7/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
May 29 01:24:31 minikube cri-dockerd[1171]: time="2023-05-29T01:24:31Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/a966743ced5031295ee036bdff76141527ca8e62a20574b457495a95be9c040d/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
May 29 01:24:38 minikube cri-dockerd[1171]: time="2023-05-29T01:24:38Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"
May 29 01:24:41 minikube dockerd[956]: time="2023-05-29T01:24:41.430747967Z" level=info msg="ignoring event" container=2f75feee65f8bd4ad5efd2ff85f24faa23ac0bcb98a48b735975b79d422c57ff module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"

* 
* ==> container status <==
* CONTAINER           IMAGE               CREATED              STATE               NAME                      ATTEMPT             POD ID
e4f4554f91549       6e38f40d628db       About a minute ago   Running             storage-provisioner       1                   03707f507c418
98f44c79c3450       5185b96f0becf       About a minute ago   Running             coredns                   0                   a966743ced503
02ed50d7415e2       92ed2bec97a63       About a minute ago   Running             kube-proxy                0                   5e19a925c7b89
2f75feee65f8b       6e38f40d628db       About a minute ago   Exited              storage-provisioner       0                   03707f507c418
ba6bf203661e7       fce326961ae2d       About a minute ago   Running             etcd                      0                   fd282ee2c996b
33f43a11e7b53       5a79047369329       About a minute ago   Running             kube-scheduler            0                   a8506164e907c
a173c87fa0d99       ce8c2293ef09c       About a minute ago   Running             kube-controller-manager   0                   5dc21f78de792
fd6e826149045       1d9b3cbae03ce       About a minute ago   Running             kube-apiserver            0                   cb6e804770627

* 
* ==> coredns [98f44c79c345] <==
* .:53
[INFO] plugin/reload: Running configuration SHA512 = 05e3eaddc414b2d71a69b2e2bc6f2681fc1f4d04bcdd3acc1a41457bb7db518208b95ddfc4c9fffedc59c25a8faf458be1af4915a4a3c0d6777cb7a346bc5d86
CoreDNS-1.9.3
linux/amd64, go1.18.2, 45b0a11
[INFO] 127.0.0.1:46328 - 56804 "HINFO IN 2377529599581522098.3307314864355938981. udp 57 false 512" NXDOMAIN qr,rd,ra 57 0.07420168s

* 
* ==> describe nodes <==
* Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=08896fd1dc362c097c925146c4a0d0dac715ace0
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2023_05_29T10_24_18_0700
                    minikube.k8s.io/version=v1.30.1
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Mon, 29 May 2023 01:24:14 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Mon, 29 May 2023 01:25:49 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Mon, 29 May 2023 01:24:38 +0000   Mon, 29 May 2023 01:24:13 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Mon, 29 May 2023 01:24:38 +0000   Mon, 29 May 2023 01:24:13 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Mon, 29 May 2023 01:24:38 +0000   Mon, 29 May 2023 01:24:13 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Mon, 29 May 2023 01:24:38 +0000   Mon, 29 May 2023 01:24:18 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                8
  ephemeral-storage:  263174212Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             7978028Ki
  pods:               110
Allocatable:
  cpu:                8
  ephemeral-storage:  263174212Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             7978028Ki
  pods:               110
System Info:
  Machine ID:                 4be7b89512914632b7eb285a3ba7704a
  System UUID:                4be7b89512914632b7eb285a3ba7704a
  Boot ID:                    d8bb9726-be20-41f5-8807-18fbecbe9943
  Kernel Version:             5.10.102.1-microsoft-standard-WSL2
  OS Image:                   Ubuntu 20.04.5 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://23.0.2
  Kubelet Version:            v1.26.3
  Kube-Proxy Version:         v1.26.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (7 in total)
  Namespace                   Name                                CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                ------------  ----------  ---------------  -------------  ---
  kube-system                 coredns-787d4945fb-kw4pz            100m (1%!)(MISSING)     0 (0%!)(MISSING)      70Mi (0%!)(MISSING)        170Mi (2%!)(MISSING)     81s
  kube-system                 etcd-minikube                       100m (1%!)(MISSING)     0 (0%!)(MISSING)      100Mi (1%!)(MISSING)       0 (0%!)(MISSING)         94s
  kube-system                 kube-apiserver-minikube             250m (3%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         96s
  kube-system                 kube-controller-manager-minikube    200m (2%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         96s
  kube-system                 kube-proxy-tds74                    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         81s
  kube-system                 kube-scheduler-minikube             100m (1%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         93s
  kube-system                 storage-provisioner                 0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         91s
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (9%!)(MISSING)   0 (0%!)(MISSING)
  memory             170Mi (2%!)(MISSING)  170Mi (2%!)(MISSING)
  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
Events:
  Type    Reason                   Age   From             Message
  ----    ------                   ----  ----             -------
  Normal  Starting                 79s   kube-proxy       
  Normal  Starting                 94s   kubelet          Starting kubelet.
  Normal  NodeHasSufficientMemory  93s   kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    93s   kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     93s   kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeNotReady             93s   kubelet          Node minikube status is now: NodeNotReady
  Normal  NodeAllocatableEnforced  93s   kubelet          Updated Node Allocatable limit across pods
  Normal  NodeReady                93s   kubelet          Node minikube status is now: NodeReady
  Normal  RegisteredNode           82s   node-controller  Node minikube event: Registered Node minikube in Controller

* 
* ==> dmesg <==
* [  +0.352398] FS-Cache: Duplicate cookie detected
[  +0.000004] FS-Cache: O-cookie c=00000000893f85fb [p=000000009571f799 fl=222 nc=0 na=1]
[  +0.000001] FS-Cache: O-cookie d=00000000af4fa30b n=0000000056bc09f7
[  +0.000001] FS-Cache: O-key=[10] '34323934393431353035'
[  +0.000007] FS-Cache: N-cookie c=000000005cd1d138 [p=000000009571f799 fl=2 nc=0 na=1]
[  +0.000001] FS-Cache: N-cookie d=00000000af4fa30b n=00000000b6bf013f
[  +0.000001] FS-Cache: N-key=[10] '34323934393431353035'
[  +0.000382] init: (1) ERROR: ConfigApplyWindowsLibPath:2474: open /etc/ld.so.conf.d/ld.wsl.conf
[  +0.000003]  failed 2
[  +0.033042] WARNING: /usr/share/zoneinfo/Asia/Tokyo not found. Is the tzdata package installed?
[  +1.998936] FS-Cache: Duplicate cookie detected
[  +0.000009] FS-Cache: O-cookie c=000000009d28ca3e [p=000000009571f799 fl=222 nc=0 na=1]
[  +0.000001] FS-Cache: O-cookie d=00000000af4fa30b n=00000000b8408623
[  +0.000001] FS-Cache: O-key=[10] '34323934393431373038'
[  +0.000007] FS-Cache: N-cookie c=00000000458d5083 [p=000000009571f799 fl=2 nc=0 na=1]
[  +0.000001] FS-Cache: N-cookie d=00000000af4fa30b n=00000000680c1256
[  +0.000000] FS-Cache: N-key=[10] '34323934393431373038'
[  +1.656479] FS-Cache: Duplicate cookie detected
[  +0.000027] FS-Cache: O-cookie c=000000000ba094c5 [p=000000009571f799 fl=222 nc=0 na=1]
[  +0.000003] FS-Cache: O-cookie d=00000000af4fa30b n=00000000688ece2d
[  +0.000005] FS-Cache: O-key=[10] '34323934393431383734'
[  +0.000012] FS-Cache: N-cookie c=0000000092cf3a22 [p=000000009571f799 fl=2 nc=0 na=1]
[  +0.000001] FS-Cache: N-cookie d=00000000af4fa30b n=00000000335804b9
[  +0.000002] FS-Cache: N-key=[10] '34323934393431383734'
[  +0.001061] init: (1) ERROR: ConfigApplyWindowsLibPath:2474: open /etc/ld.so.conf.d/ld.wsl.conf
[  +0.000004]  failed 2
[  +0.003535] init: (2) ERROR: UtilCreateProcessAndWait:653: /bin/mount failed with 2
[  +0.000279] init: (1) ERROR: UtilCreateProcessAndWait:673: /bin/mount failed with status 0x
[  +0.000007] ff00
[  +0.000051] init: (1) ERROR: ConfigMountFsTab:2529: Processing fstab with mount -a failed.
[  +0.059609] WARNING: /usr/share/zoneinfo/Asia/Tokyo not found. Is the tzdata package installed?
[  +0.395031] init: (8) ERROR: CreateProcessEntryCommon:440: getpwuid(0) failed 2
[  +0.000009] init: (8) ERROR: CreateProcessEntryCommon:443: getpwuid(0) failed 2
[  +7.754654] FS-Cache: Duplicate cookie detected
[  +0.000058] FS-Cache: O-cookie c=0000000068878b41 [p=000000009571f799 fl=222 nc=0 na=1]
[  +0.000009] FS-Cache: O-cookie d=00000000af4fa30b n=00000000b0c83846
[  +0.000001] FS-Cache: O-key=[10] '34323934393432363935'
[  +0.000006] FS-Cache: N-cookie c=00000000dd7f3033 [p=000000009571f799 fl=2 nc=0 na=1]
[  +0.000001] FS-Cache: N-cookie d=00000000af4fa30b n=00000000e4874429
[  +0.000001] FS-Cache: N-key=[10] '34323934393432363935'
[  +2.645701] FS-Cache: Duplicate cookie detected
[  +0.000004] FS-Cache: O-cookie c=00000000fa35fa31 [p=000000009571f799 fl=222 nc=0 na=1]
[  +0.000001] FS-Cache: O-cookie d=00000000af4fa30b n=00000000a5e056ad
[  +0.000001] FS-Cache: O-key=[10] '34323934393432393630'
[  +0.000008] FS-Cache: N-cookie c=00000000259592a6 [p=000000009571f799 fl=2 nc=0 na=1]
[  +0.000001] FS-Cache: N-cookie d=00000000af4fa30b n=00000000b74a5ac7
[  +0.000001] FS-Cache: N-key=[10] '34323934393432393630'
[ +12.247805] cgroup: runc (860) created nested cgroup for controller "memory" which has incomplete hierarchy support. Nested cgroups may change behavior in the future.
[  +0.000002] cgroup: "memory" requires setting use_hierarchy to 1 on the root
[May29 00:29] hrtimer: interrupt took 5682661 ns
[May29 01:22] CPU: 2 PID: 366 Comm: weston Not tainted 5.10.102.1-microsoft-standard-WSL2 #1
[  +0.000663] RIP: 0033:0x7fb3154df115
[  +0.000098] Code: c2 b8 ea 00 00 00 0f 05 48 3d 00 f0 ff ff 77 3d 41 89 c0 41 ba 08 00 00 00 31 d2 4c 89 ce bf 02 00 00 00 b8 0e 00 00 00 0f 05 <48> 8b 84 24 08 01 00 00 64 48 33 04 25 28 00 00 00 75 24 44 89 c0
[  +0.000001] RSP: 002b:00007ffc9999d5f0 EFLAGS: 00000246 ORIG_RAX: 000000000000000e
[  +0.000021] RAX: 0000000000000000 RBX: 00007fb31566d000 RCX: 00007fb3154df115
[  +0.000000] RDX: 0000000000000000 RSI: 00007ffc9999d5f0 RDI: 0000000000000002
[  +0.000000] RBP: 00007fb31562f630 R08: 0000000000000000 R09: 00007ffc9999d5f0
[  +0.000013] R10: 0000000000000008 R11: 0000000000000246 R12: 00007fb314726430
[  +0.000004] R13: 000000000000047c R14: 00007fb314726242 R15: 00007ffc9999e258
[  +0.000001] FS:  00007fb314c34900 GS:  0000000000000000

* 
* ==> etcd [ba6bf203661e] <==
* {"level":"info","ts":"2023-05-29T01:24:11.518Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://192.168.49.2:2379","--cert-file=/var/lib/minikube/certs/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/minikube/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://192.168.49.2:2380","--initial-cluster=minikube=https://192.168.49.2:2380","--key-file=/var/lib/minikube/certs/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://192.168.49.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://192.168.49.2:2380","--name=minikube","--peer-cert-file=/var/lib/minikube/certs/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/var/lib/minikube/certs/etcd/peer.key","--peer-trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt","--proxy-refresh-interval=70000","--snapshot-count=10000","--trusted-ca-file=/var/lib/minikube/certs/etcd/ca.crt"]}
{"level":"info","ts":"2023-05-29T01:24:11.518Z","caller":"embed/etcd.go:124","msg":"configuring peer listeners","listen-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2023-05-29T01:24:11.518Z","caller":"embed/etcd.go:484","msg":"starting with peer TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/peer.crt, key = /var/lib/minikube/certs/etcd/peer.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-05-29T01:24:11.519Z","caller":"embed/etcd.go:132","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"]}
{"level":"info","ts":"2023-05-29T01:24:11.519Z","caller":"embed/etcd.go:306","msg":"starting an etcd server","etcd-version":"3.5.6","git-sha":"cecbe35ce","go-version":"go1.16.15","go-os":"linux","go-arch":"amd64","max-cpu-set":8,"max-cpu-available":8,"member-initialized":false,"name":"minikube","data-dir":"/var/lib/minikube/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/minikube/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"minikube=https://192.168.49.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2023-05-29T01:24:11.536Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/minikube/etcd/member/snap/db","took":"15.945436ms"}
{"level":"info","ts":"2023-05-29T01:24:11.631Z","caller":"etcdserver/raft.go:494","msg":"starting local member","local-member-id":"aec36adc501070cc","cluster-id":"fa54960ea34d58be"}
{"level":"info","ts":"2023-05-29T01:24:11.631Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=()"}
{"level":"info","ts":"2023-05-29T01:24:11.631Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 0"}
{"level":"info","ts":"2023-05-29T01:24:11.632Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft aec36adc501070cc [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2023-05-29T01:24:11.632Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became follower at term 1"}
{"level":"info","ts":"2023-05-29T01:24:11.632Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"warn","ts":"2023-05-29T01:24:11.643Z","caller":"auth/store.go:1234","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2023-05-29T01:24:11.706Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2023-05-29T01:24:11.714Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2023-05-29T01:24:11.720Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"aec36adc501070cc","local-server-version":"3.5.6","cluster-version":"to_be_decided"}
{"level":"info","ts":"2023-05-29T01:24:11.721Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2023-05-29T01:24:11.721Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2023-05-29T01:24:11.721Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2023-05-29T01:24:11.721Z","caller":"etcdserver/server.go:738","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"aec36adc501070cc","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2023-05-29T01:24:11.723Z","caller":"embed/etcd.go:687","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-05-29T01:24:11.723Z","caller":"embed/etcd.go:586","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2023-05-29T01:24:11.723Z","caller":"embed/etcd.go:558","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2023-05-29T01:24:11.723Z","caller":"embed/etcd.go:275","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2023-05-29T01:24:11.723Z","caller":"embed/etcd.go:762","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2023-05-29T01:24:11.724Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2023-05-29T01:24:11.724Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2023-05-29T01:24:11.933Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2023-05-29T01:24:11.933Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2023-05-29T01:24:11.933Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2023-05-29T01:24:11.933Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2023-05-29T01:24:11.933Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2023-05-29T01:24:11.933Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2023-05-29T01:24:11.933Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2023-05-29T01:24:11.936Z","caller":"etcdserver/server.go:2054","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2023-05-29T01:24:11.936Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-05-29T01:24:11.937Z","caller":"etcdserver/server.go:2563","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2023-05-29T01:24:11.937Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-05-29T01:24:11.937Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2023-05-29T01:24:11.937Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2023-05-29T01:24:11.938Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"192.168.49.2:2379"}
{"level":"info","ts":"2023-05-29T01:24:11.938Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2023-05-29T01:24:11.942Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2023-05-29T01:24:11.942Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2023-05-29T01:24:11.942Z","caller":"etcdserver/server.go:2587","msg":"cluster version is updated","cluster-version":"3.5"}

* 
* ==> kernel <==
*  01:25:51 up  1:00,  0 users,  load average: 0.42, 0.64, 0.54
Linux minikube 5.10.102.1-microsoft-standard-WSL2 #1 SMP Wed Mar 2 00:30:59 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 20.04.5 LTS"

* 
* ==> kube-apiserver [fd6e82614904] <==
* W0529 01:24:13.359822       1 genericapiserver.go:660] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I0529 01:24:14.048677       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0529 01:24:14.048785       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0529 01:24:14.048795       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/var/lib/minikube/certs/apiserver.crt::/var/lib/minikube/certs/apiserver.key"
I0529 01:24:14.048822       1 secure_serving.go:210] Serving securely on [::]:8443
I0529 01:24:14.048848       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0529 01:24:14.048899       1 apf_controller.go:361] Starting API Priority and Fairness config controller
I0529 01:24:14.048941       1 autoregister_controller.go:141] Starting autoregister controller
I0529 01:24:14.048950       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0529 01:24:14.048969       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0529 01:24:14.048980       1 shared_informer.go:273] Waiting for caches to sync for crd-autoregister
I0529 01:24:14.049199       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0529 01:24:14.049211       1 shared_informer.go:273] Waiting for caches to sync for cluster_authentication_trust_controller
I0529 01:24:14.049233       1 controller.go:83] Starting OpenAPI AggregationController
I0529 01:24:14.049269       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0529 01:24:14.049326       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0529 01:24:14.049343       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0529 01:24:14.049355       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0529 01:24:14.049372       1 available_controller.go:494] Starting AvailableConditionController
I0529 01:24:14.049378       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0529 01:24:14.049585       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0529 01:24:14.049619       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0529 01:24:14.049820       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0529 01:24:14.050392       1 customresource_discovery_controller.go:288] Starting DiscoveryController
I0529 01:24:14.049588       1 controller.go:121] Starting legacy_token_tracking_controller
I0529 01:24:14.050755       1 shared_informer.go:273] Waiting for caches to sync for configmaps
I0529 01:24:14.051091       1 controller.go:85] Starting OpenAPI controller
I0529 01:24:14.052162       1 controller.go:85] Starting OpenAPI V3 controller
I0529 01:24:14.052232       1 naming_controller.go:291] Starting NamingConditionController
I0529 01:24:14.052262       1 establishing_controller.go:76] Starting EstablishingController
I0529 01:24:14.052309       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0529 01:24:14.052346       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0529 01:24:14.052548       1 crd_finalizer.go:266] Starting CRDFinalizer
I0529 01:24:14.102915       1 shared_informer.go:280] Caches are synced for node_authorizer
I0529 01:24:14.111551       1 controller.go:615] quota admission added evaluator for: namespaces
I0529 01:24:14.149580       1 shared_informer.go:280] Caches are synced for crd-autoregister
I0529 01:24:14.149606       1 shared_informer.go:280] Caches are synced for cluster_authentication_trust_controller
I0529 01:24:14.149635       1 apf_controller.go:366] Running API Priority and Fairness config worker
I0529 01:24:14.149640       1 apf_controller.go:369] Running API Priority and Fairness periodic rebalancing process
I0529 01:24:14.149662       1 cache.go:39] Caches are synced for autoregister controller
I0529 01:24:14.149718       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0529 01:24:14.149898       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0529 01:24:14.202382       1 shared_informer.go:280] Caches are synced for configmaps
I0529 01:24:14.202764       1 controller.go:615] quota admission added evaluator for: leases.coordination.k8s.io
I0529 01:24:14.781478       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I0529 01:24:15.060106       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0529 01:24:15.066125       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0529 01:24:15.066158       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0529 01:24:16.019592       1 controller.go:615] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0529 01:24:16.104138       1 controller.go:615] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0529 01:24:16.229448       1 alloc.go:327] "allocated clusterIPs" service="default/kubernetes" clusterIPs=map[IPv4:10.96.0.1]
W0529 01:24:16.241150       1 lease.go:251] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0529 01:24:16.242072       1 controller.go:615] quota admission added evaluator for: endpoints
I0529 01:24:16.250636       1 controller.go:615] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0529 01:24:17.126031       1 controller.go:615] quota admission added evaluator for: serviceaccounts
I0529 01:24:17.805000       1 controller.go:615] quota admission added evaluator for: deployments.apps
I0529 01:24:17.831998       1 alloc.go:327] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs=map[IPv4:10.96.0.10]
I0529 01:24:17.850226       1 controller.go:615] quota admission added evaluator for: daemonsets.apps
I0529 01:24:30.776592       1 controller.go:615] quota admission added evaluator for: controllerrevisions.apps
I0529 01:24:30.828938       1 controller.go:615] quota admission added evaluator for: replicasets.apps

* 
* ==> kube-controller-manager [a173c87fa0d9] <==
* I0529 01:24:29.529335       1 shared_informer.go:273] Waiting for caches to sync for GC
I0529 01:24:29.773538       1 garbagecollector.go:154] Starting garbage collector controller
I0529 01:24:29.773571       1 shared_informer.go:273] Waiting for caches to sync for garbage collector
I0529 01:24:29.773596       1 graph_builder.go:291] GraphBuilder running
I0529 01:24:29.773634       1 controllermanager.go:622] Started "garbagecollector"
I0529 01:24:29.776217       1 shared_informer.go:273] Waiting for caches to sync for resource quota
W0529 01:24:29.780336       1 actual_state_of_world.go:541] Failed to update statusUpdateNeeded field in actual state of world: Failed to set statusUpdateNeeded to needed true, because nodeName="minikube" does not exist
I0529 01:24:29.781556       1 shared_informer.go:280] Caches are synced for expand
I0529 01:24:29.784484       1 shared_informer.go:280] Caches are synced for namespace
I0529 01:24:29.787763       1 shared_informer.go:280] Caches are synced for stateful set
I0529 01:24:29.790244       1 shared_informer.go:280] Caches are synced for PVC protection
I0529 01:24:29.800805       1 shared_informer.go:280] Caches are synced for PV protection
I0529 01:24:29.803404       1 shared_informer.go:280] Caches are synced for ephemeral
I0529 01:24:29.805903       1 shared_informer.go:280] Caches are synced for service account
I0529 01:24:29.816123       1 shared_informer.go:280] Caches are synced for disruption
I0529 01:24:29.822929       1 shared_informer.go:280] Caches are synced for bootstrap_signer
I0529 01:24:29.823308       1 shared_informer.go:280] Caches are synced for HPA
I0529 01:24:29.828664       1 shared_informer.go:280] Caches are synced for crt configmap
I0529 01:24:29.828749       1 shared_informer.go:280] Caches are synced for node
I0529 01:24:29.828775       1 range_allocator.go:167] Sending events to api server.
I0529 01:24:29.828809       1 range_allocator.go:171] Starting range CIDR allocator
I0529 01:24:29.828812       1 shared_informer.go:273] Waiting for caches to sync for cidrallocator
I0529 01:24:29.828818       1 shared_informer.go:280] Caches are synced for cidrallocator
I0529 01:24:29.830139       1 shared_informer.go:280] Caches are synced for GC
I0529 01:24:29.831266       1 shared_informer.go:280] Caches are synced for ReplicationController
I0529 01:24:29.834537       1 shared_informer.go:280] Caches are synced for endpoint
I0529 01:24:29.836902       1 shared_informer.go:280] Caches are synced for persistent volume
I0529 01:24:29.839378       1 range_allocator.go:372] Set node minikube PodCIDR to [10.244.0.0/24]
I0529 01:24:29.847245       1 shared_informer.go:280] Caches are synced for endpoint_slice
I0529 01:24:29.857232       1 shared_informer.go:280] Caches are synced for ReplicaSet
I0529 01:24:29.857310       1 shared_informer.go:280] Caches are synced for ClusterRoleAggregator
I0529 01:24:29.869799       1 shared_informer.go:280] Caches are synced for TTL
I0529 01:24:29.877140       1 shared_informer.go:280] Caches are synced for endpoint_slice_mirroring
I0529 01:24:29.878128       1 shared_informer.go:280] Caches are synced for daemon sets
I0529 01:24:29.879176       1 shared_informer.go:280] Caches are synced for attach detach
I0529 01:24:29.880225       1 shared_informer.go:280] Caches are synced for deployment
I0529 01:24:29.928754       1 shared_informer.go:280] Caches are synced for certificate-csrapproving
I0529 01:24:29.975760       1 shared_informer.go:280] Caches are synced for taint
I0529 01:24:29.975896       1 node_lifecycle_controller.go:1438] Initializing eviction metric for zone: 
I0529 01:24:29.975932       1 shared_informer.go:280] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0529 01:24:29.975946       1 taint_manager.go:206] "Starting NoExecuteTaintManager"
W0529 01:24:29.976000       1 node_lifecycle_controller.go:1053] Missing timestamp for Node minikube. Assuming now as a timestamp.
I0529 01:24:29.975760       1 shared_informer.go:280] Caches are synced for certificate-csrsigning-legacy-unknown
I0529 01:24:29.976055       1 node_lifecycle_controller.go:1254] Controller detected that zone  is now in state Normal.
I0529 01:24:29.976066       1 shared_informer.go:280] Caches are synced for certificate-csrsigning-kubelet-serving
I0529 01:24:29.976139       1 event.go:294] "Event occurred" object="minikube" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node minikube event: Registered Node minikube in Controller"
I0529 01:24:29.976017       1 taint_manager.go:211] "Sending events to api server"
I0529 01:24:29.976074       1 shared_informer.go:280] Caches are synced for certificate-csrsigning-kubelet-client
I0529 01:24:29.991569       1 shared_informer.go:273] Waiting for caches to sync for garbage collector
I0529 01:24:30.011626       1 shared_informer.go:280] Caches are synced for TTL after finished
I0529 01:24:30.027790       1 shared_informer.go:280] Caches are synced for job
I0529 01:24:30.054636       1 shared_informer.go:280] Caches are synced for resource quota
I0529 01:24:30.076461       1 shared_informer.go:280] Caches are synced for cronjob
I0529 01:24:30.076627       1 shared_informer.go:280] Caches are synced for resource quota
I0529 01:24:30.392638       1 shared_informer.go:280] Caches are synced for garbage collector
I0529 01:24:30.473676       1 shared_informer.go:280] Caches are synced for garbage collector
I0529 01:24:30.473705       1 garbagecollector.go:163] Garbage collector: all resource monitors have synced. Proceeding to collect garbage
I0529 01:24:30.798439       1 event.go:294] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-tds74"
I0529 01:24:30.836827       1 event.go:294] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-787d4945fb to 1"
I0529 01:24:30.986413       1 event.go:294] "Event occurred" object="kube-system/coredns-787d4945fb" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-787d4945fb-kw4pz"

* 
* ==> kube-proxy [02ed50d7415e] <==
* I0529 01:24:31.752263       1 node.go:163] Successfully retrieved node IP: 192.168.49.2
I0529 01:24:31.752349       1 server_others.go:109] "Detected node IP" address="192.168.49.2"
I0529 01:24:31.752382       1 server_others.go:535] "Using iptables proxy"
I0529 01:24:31.771271       1 server_others.go:176] "Using iptables Proxier"
I0529 01:24:31.771334       1 server_others.go:183] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0529 01:24:31.771343       1 server_others.go:184] "Creating dualStackProxier for iptables"
I0529 01:24:31.771357       1 server_others.go:465] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local for IPv6"
I0529 01:24:31.771387       1 proxier.go:242] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0529 01:24:31.771804       1 server.go:655] "Version info" version="v1.26.3"
I0529 01:24:31.771830       1 server.go:657] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0529 01:24:31.803381       1 config.go:317] "Starting service config controller"
I0529 01:24:31.803440       1 shared_informer.go:273] Waiting for caches to sync for service config
I0529 01:24:31.803470       1 config.go:226] "Starting endpoint slice config controller"
I0529 01:24:31.803473       1 shared_informer.go:273] Waiting for caches to sync for endpoint slice config
I0529 01:24:31.803904       1 config.go:444] "Starting node config controller"
I0529 01:24:31.803938       1 shared_informer.go:273] Waiting for caches to sync for node config
I0529 01:24:31.904388       1 shared_informer.go:280] Caches are synced for node config
I0529 01:24:31.904421       1 shared_informer.go:280] Caches are synced for service config
I0529 01:24:31.904437       1 shared_informer.go:280] Caches are synced for endpoint slice config

* 
* ==> kube-scheduler [33f43a11e7b5] <==
* I0529 01:24:14.116960       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0529 01:24:14.119643       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0529 01:24:14.119719       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0529 01:24:14.120155       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0529 01:24:14.120192       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0529 01:24:14.120205       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0529 01:24:14.120222       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0529 01:24:14.120313       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0529 01:24:14.119634       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0529 01:24:14.120350       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0529 01:24:14.120357       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0529 01:24:14.120182       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0529 01:24:14.120362       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0529 01:24:14.120379       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0529 01:24:14.120396       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0529 01:24:14.120398       1 reflector.go:424] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0529 01:24:14.120448       1 reflector.go:140] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0529 01:24:14.120545       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0529 01:24:14.120565       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0529 01:24:14.120843       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0529 01:24:14.120861       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0529 01:24:14.120848       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0529 01:24:14.120984       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0529 01:24:14.121203       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0529 01:24:14.121240       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0529 01:24:14.121265       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0529 01:24:14.121296       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0529 01:24:14.121328       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0529 01:24:14.121412       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0529 01:24:14.121393       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0529 01:24:14.122517       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0529 01:24:15.070542       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0529 01:24:15.070577       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0529 01:24:15.088666       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0529 01:24:15.088703       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0529 01:24:15.094767       1 reflector.go:424] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0529 01:24:15.094803       1 reflector.go:140] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0529 01:24:15.168488       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0529 01:24:15.168536       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0529 01:24:15.186096       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0529 01:24:15.186145       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0529 01:24:15.225435       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0529 01:24:15.225483       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0529 01:24:15.249755       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0529 01:24:15.249793       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0529 01:24:15.290043       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0529 01:24:15.290081       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0529 01:24:15.327534       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0529 01:24:15.327576       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0529 01:24:15.370394       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0529 01:24:15.370434       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0529 01:24:15.441751       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0529 01:24:15.441797       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0529 01:24:15.486174       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0529 01:24:15.486215       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0529 01:24:15.542652       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0529 01:24:15.542695       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0529 01:24:15.572748       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0529 01:24:15.572792       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
I0529 01:24:17.017120       1 shared_informer.go:280] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file

* 
* ==> kubelet <==
* -- Logs begin at Mon 2023-05-29 01:24:01 UTC, end at Mon 2023-05-29 01:25:51 UTC. --
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.207775    2375 state_mem.go:35] "Initializing new in-memory state store"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.208012    2375 state_mem.go:75] "Updated machine memory state"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.209186    2375 setters.go:548] "Node became not ready" node="minikube" condition={Type:Ready Status:False LastHeartbeatTime:2023-05-29 01:24:18.209087867 +0000 UTC m=+0.469118459 LastTransitionTime:2023-05-29 01:24:18.209087867 +0000 UTC m=+0.469118459 Reason:KubeletNotReady Message:container runtime status check may not have completed yet}
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.209662    2375 manager.go:455] "Failed to read data from checkpoint" checkpoint="kubelet_internal_checkpoint" err="checkpoint is not found"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.209889    2375 plugin_manager.go:118] "Starting Kubelet Plugin Manager"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.331977    2375 topology_manager.go:210] "Topology Admit Handler"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.332147    2375 topology_manager.go:210] "Topology Admit Handler"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.332306    2375 topology_manager.go:210] "Topology Admit Handler"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.332409    2375 topology_manager.go:210] "Topology Admit Handler"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.337841    2375 kubelet_node_status.go:493] "Fast updating node status as it just became ready"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.403306    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/466b9e73e627277a8c24637c2fa6442d-kubeconfig\") pod \"kube-controller-manager-minikube\" (UID: \"466b9e73e627277a8c24637c2fa6442d\") " pod="kube-system/kube-controller-manager-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.403362    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/466b9e73e627277a8c24637c2fa6442d-usr-local-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"466b9e73e627277a8c24637c2fa6442d\") " pod="kube-system/kube-controller-manager-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.403669    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/466b9e73e627277a8c24637c2fa6442d-usr-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"466b9e73e627277a8c24637c2fa6442d\") " pod="kube-system/kube-controller-manager-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.404218    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/cdcbce216c62c4407ac9a51ac013e7d7-usr-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"cdcbce216c62c4407ac9a51ac013e7d7\") " pod="kube-system/kube-apiserver-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.404269    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/466b9e73e627277a8c24637c2fa6442d-ca-certs\") pod \"kube-controller-manager-minikube\" (UID: \"466b9e73e627277a8c24637c2fa6442d\") " pod="kube-system/kube-controller-manager-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.404300    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-data\" (UniqueName: \"kubernetes.io/host-path/a121e106627e5c6efa9ba48006cc43bf-etcd-data\") pod \"etcd-minikube\" (UID: \"a121e106627e5c6efa9ba48006cc43bf\") " pod="kube-system/etcd-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.404328    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/cdcbce216c62c4407ac9a51ac013e7d7-ca-certs\") pod \"kube-apiserver-minikube\" (UID: \"cdcbce216c62c4407ac9a51ac013e7d7\") " pod="kube-system/kube-apiserver-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.404369    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/cdcbce216c62c4407ac9a51ac013e7d7-etc-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"cdcbce216c62c4407ac9a51ac013e7d7\") " pod="kube-system/kube-apiserver-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.404432    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/cdcbce216c62c4407ac9a51ac013e7d7-k8s-certs\") pod \"kube-apiserver-minikube\" (UID: \"cdcbce216c62c4407ac9a51ac013e7d7\") " pod="kube-system/kube-apiserver-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.404472    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-local-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/cdcbce216c62c4407ac9a51ac013e7d7-usr-local-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"cdcbce216c62c4407ac9a51ac013e7d7\") " pod="kube-system/kube-apiserver-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.404523    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"flexvolume-dir\" (UniqueName: \"kubernetes.io/host-path/466b9e73e627277a8c24637c2fa6442d-flexvolume-dir\") pod \"kube-controller-manager-minikube\" (UID: \"466b9e73e627277a8c24637c2fa6442d\") " pod="kube-system/kube-controller-manager-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.404549    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-certs\" (UniqueName: \"kubernetes.io/host-path/a121e106627e5c6efa9ba48006cc43bf-etcd-certs\") pod \"etcd-minikube\" (UID: \"a121e106627e5c6efa9ba48006cc43bf\") " pod="kube-system/etcd-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.404589    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etc-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/466b9e73e627277a8c24637c2fa6442d-etc-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"466b9e73e627277a8c24637c2fa6442d\") " pod="kube-system/kube-controller-manager-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.404617    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/466b9e73e627277a8c24637c2fa6442d-k8s-certs\") pod \"kube-controller-manager-minikube\" (UID: \"466b9e73e627277a8c24637c2fa6442d\") " pod="kube-system/kube-controller-manager-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.404676    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/0818f4b1a57de9c3f9c82667e7fcc870-kubeconfig\") pod \"kube-scheduler-minikube\" (UID: \"0818f4b1a57de9c3f9c82667e7fcc870\") " pod="kube-system/kube-scheduler-minikube"
May 29 01:24:18 minikube kubelet[2375]: E0529 01:24:18.503493    2375 kubelet.go:1802] "Failed creating a mirror pod for" err="pods \"etcd-minikube\" already exists" pod="kube-system/etcd-minikube"
May 29 01:24:18 minikube kubelet[2375]: E0529 01:24:18.503894    2375 kubelet.go:1802] "Failed creating a mirror pod for" err="pods \"kube-apiserver-minikube\" already exists" pod="kube-system/kube-apiserver-minikube"
May 29 01:24:18 minikube kubelet[2375]: E0529 01:24:18.536586    2375 kubelet.go:1802] "Failed creating a mirror pod for" err="pods \"kube-controller-manager-minikube\" already exists" pod="kube-system/kube-controller-manager-minikube"
May 29 01:24:18 minikube kubelet[2375]: I0529 01:24:18.919781    2375 apiserver.go:52] "Watching apiserver"
May 29 01:24:19 minikube kubelet[2375]: I0529 01:24:19.136559    2375 desired_state_of_world_populator.go:159] "Finished populating initial desired state of world"
May 29 01:24:19 minikube kubelet[2375]: I0529 01:24:19.209060    2375 reconciler.go:41] "Reconciler: start to sync state"
May 29 01:24:19 minikube kubelet[2375]: E0529 01:24:19.620907    2375 kubelet.go:1802] "Failed creating a mirror pod for" err="pods \"kube-controller-manager-minikube\" already exists" pod="kube-system/kube-controller-manager-minikube"
May 29 01:24:19 minikube kubelet[2375]: E0529 01:24:19.731635    2375 kubelet.go:1802] "Failed creating a mirror pod for" err="pods \"etcd-minikube\" already exists" pod="kube-system/etcd-minikube"
May 29 01:24:20 minikube kubelet[2375]: E0529 01:24:20.012522    2375 kubelet.go:1802] "Failed creating a mirror pod for" err="pods \"kube-apiserver-minikube\" already exists" pod="kube-system/kube-apiserver-minikube"
May 29 01:24:20 minikube kubelet[2375]: E0529 01:24:20.128989    2375 kubelet.go:1802] "Failed creating a mirror pod for" err="pods \"kube-scheduler-minikube\" already exists" pod="kube-system/kube-scheduler-minikube"
May 29 01:24:20 minikube kubelet[2375]: I0529 01:24:20.732126    2375 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/etcd-minikube" podStartSLOduration=3.732086368 pod.CreationTimestamp="2023-05-29 01:24:17 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-05-29 01:24:20.731936829 +0000 UTC m=+2.991967424" watchObservedRunningTime="2023-05-29 01:24:20.732086368 +0000 UTC m=+2.992116966"
May 29 01:24:20 minikube kubelet[2375]: I0529 01:24:20.732215    2375 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-controller-manager-minikube" podStartSLOduration=5.732200876 pod.CreationTimestamp="2023-05-29 01:24:15 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-05-29 01:24:20.405039398 +0000 UTC m=+2.665070049" watchObservedRunningTime="2023-05-29 01:24:20.732200876 +0000 UTC m=+2.992231469"
May 29 01:24:21 minikube kubelet[2375]: I0529 01:24:21.531914    2375 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-apiserver-minikube" podStartSLOduration=6.531876577 pod.CreationTimestamp="2023-05-29 01:24:15 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-05-29 01:24:21.531786879 +0000 UTC m=+3.791817476" watchObservedRunningTime="2023-05-29 01:24:21.531876577 +0000 UTC m=+3.791907171"
May 29 01:24:21 minikube kubelet[2375]: I0529 01:24:21.931862    2375 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-scheduler-minikube" podStartSLOduration=3.931831088 pod.CreationTimestamp="2023-05-29 01:24:18 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-05-29 01:24:21.931687755 +0000 UTC m=+4.191718350" watchObservedRunningTime="2023-05-29 01:24:21.931831088 +0000 UTC m=+4.191861683"
May 29 01:24:29 minikube kubelet[2375]: I0529 01:24:29.999803    2375 topology_manager.go:210] "Topology Admit Handler"
May 29 01:24:30 minikube kubelet[2375]: I0529 01:24:30.091127    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"tmp\" (UniqueName: \"kubernetes.io/host-path/127a1295-9c99-4aba-b54c-644d1779c12a-tmp\") pod \"storage-provisioner\" (UID: \"127a1295-9c99-4aba-b54c-644d1779c12a\") " pod="kube-system/storage-provisioner"
May 29 01:24:30 minikube kubelet[2375]: I0529 01:24:30.091183    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-gsk78\" (UniqueName: \"kubernetes.io/projected/127a1295-9c99-4aba-b54c-644d1779c12a-kube-api-access-gsk78\") pod \"storage-provisioner\" (UID: \"127a1295-9c99-4aba-b54c-644d1779c12a\") " pod="kube-system/storage-provisioner"
May 29 01:24:30 minikube kubelet[2375]: E0529 01:24:30.196954    2375 projected.go:292] Couldn't get configMap kube-system/kube-root-ca.crt: configmap "kube-root-ca.crt" not found
May 29 01:24:30 minikube kubelet[2375]: E0529 01:24:30.197008    2375 projected.go:198] Error preparing data for projected volume kube-api-access-gsk78 for pod kube-system/storage-provisioner: configmap "kube-root-ca.crt" not found
May 29 01:24:30 minikube kubelet[2375]: E0529 01:24:30.197078    2375 nestedpendingoperations.go:348] Operation for "{volumeName:kubernetes.io/projected/127a1295-9c99-4aba-b54c-644d1779c12a-kube-api-access-gsk78 podName:127a1295-9c99-4aba-b54c-644d1779c12a nodeName:}" failed. No retries permitted until 2023-05-29 01:24:30.697061089 +0000 UTC m=+12.957091679 (durationBeforeRetry 500ms). Error: MountVolume.SetUp failed for volume "kube-api-access-gsk78" (UniqueName: "kubernetes.io/projected/127a1295-9c99-4aba-b54c-644d1779c12a-kube-api-access-gsk78") pod "storage-provisioner" (UID: "127a1295-9c99-4aba-b54c-644d1779c12a") : configmap "kube-root-ca.crt" not found
May 29 01:24:30 minikube kubelet[2375]: I0529 01:24:30.807413    2375 topology_manager.go:210] "Topology Admit Handler"
May 29 01:24:30 minikube kubelet[2375]: I0529 01:24:30.896597    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\" (UniqueName: \"kubernetes.io/host-path/beff000f-7177-4db6-a7ca-add2f4eff7f8-xtables-lock\") pod \"kube-proxy-tds74\" (UID: \"beff000f-7177-4db6-a7ca-add2f4eff7f8\") " pod="kube-system/kube-proxy-tds74"
May 29 01:24:30 minikube kubelet[2375]: I0529 01:24:30.896654    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-zll49\" (UniqueName: \"kubernetes.io/projected/beff000f-7177-4db6-a7ca-add2f4eff7f8-kube-api-access-zll49\") pod \"kube-proxy-tds74\" (UID: \"beff000f-7177-4db6-a7ca-add2f4eff7f8\") " pod="kube-system/kube-proxy-tds74"
May 29 01:24:30 minikube kubelet[2375]: I0529 01:24:30.896672    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"lib-modules\" (UniqueName: \"kubernetes.io/host-path/beff000f-7177-4db6-a7ca-add2f4eff7f8-lib-modules\") pod \"kube-proxy-tds74\" (UID: \"beff000f-7177-4db6-a7ca-add2f4eff7f8\") " pod="kube-system/kube-proxy-tds74"
May 29 01:24:30 minikube kubelet[2375]: I0529 01:24:30.896688    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-proxy\" (UniqueName: \"kubernetes.io/configmap/beff000f-7177-4db6-a7ca-add2f4eff7f8-kube-proxy\") pod \"kube-proxy-tds74\" (UID: \"beff000f-7177-4db6-a7ca-add2f4eff7f8\") " pod="kube-system/kube-proxy-tds74"
May 29 01:24:31 minikube kubelet[2375]: I0529 01:24:31.028399    2375 topology_manager.go:210] "Topology Admit Handler"
May 29 01:24:31 minikube kubelet[2375]: I0529 01:24:31.098504    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-8zws6\" (UniqueName: \"kubernetes.io/projected/baa3c673-e498-4756-a755-86e2c6d78a56-kube-api-access-8zws6\") pod \"coredns-787d4945fb-kw4pz\" (UID: \"baa3c673-e498-4756-a755-86e2c6d78a56\") " pod="kube-system/coredns-787d4945fb-kw4pz"
May 29 01:24:31 minikube kubelet[2375]: I0529 01:24:31.098554    2375 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/baa3c673-e498-4756-a755-86e2c6d78a56-config-volume\") pod \"coredns-787d4945fb-kw4pz\" (UID: \"baa3c673-e498-4756-a755-86e2c6d78a56\") " pod="kube-system/coredns-787d4945fb-kw4pz"
May 29 01:24:31 minikube kubelet[2375]: I0529 01:24:31.451536    2375 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="5e19a925c7b895b7b77ff88a6dee96eea6d2492df4de00a31b753626de1537f7"
May 29 01:24:31 minikube kubelet[2375]: I0529 01:24:31.497909    2375 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/storage-provisioner" podStartSLOduration=11.497867686 pod.CreationTimestamp="2023-05-29 01:24:20 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-05-29 01:24:31.4976244 +0000 UTC m=+13.757654995" watchObservedRunningTime="2023-05-29 01:24:31.497867686 +0000 UTC m=+13.757898281"
May 29 01:24:32 minikube kubelet[2375]: I0529 01:24:32.479396    2375 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-proxy-tds74" podStartSLOduration=2.479353998 pod.CreationTimestamp="2023-05-29 01:24:30 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-05-29 01:24:32.479317943 +0000 UTC m=+14.739348540" watchObservedRunningTime="2023-05-29 01:24:32.479353998 +0000 UTC m=+14.739384591"
May 29 01:24:32 minikube kubelet[2375]: I0529 01:24:32.497290    2375 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/coredns-787d4945fb-kw4pz" podStartSLOduration=2.497248608 pod.CreationTimestamp="2023-05-29 01:24:30 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-05-29 01:24:32.497114864 +0000 UTC m=+14.757145458" watchObservedRunningTime="2023-05-29 01:24:32.497248608 +0000 UTC m=+14.757279204"
May 29 01:24:38 minikube kubelet[2375]: I0529 01:24:38.978588    2375 kuberuntime_manager.go:1114] "Updating runtime config through cri with podcidr" CIDR="10.244.0.0/24"
May 29 01:24:38 minikube kubelet[2375]: I0529 01:24:38.979238    2375 kubelet_network.go:61] "Updating Pod CIDR" originalPodCIDR="" newPodCIDR="10.244.0.0/24"
May 29 01:24:41 minikube kubelet[2375]: I0529 01:24:41.529771    2375 scope.go:115] "RemoveContainer" containerID="2f75feee65f8bd4ad5efd2ff85f24faa23ac0bcb98a48b735975b79d422c57ff"

* 
* ==> storage-provisioner [2f75feee65f8] <==
* I0529 01:24:31.410138       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F0529 01:24:41.415260       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": net/http: TLS handshake timeout

* 
* ==> storage-provisioner [e4f4554f9154] <==
* I0529 01:24:41.651137       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0529 01:24:41.657609       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0529 01:24:41.657650       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0529 01:24:41.665956       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0529 01:24:41.666113       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_d3a34a47-ccf2-4d78-a409-768ebfe3184f!
I0529 01:24:41.666131       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"177b1196-2dba-4c1f-9c21-b582e80f7d2b", APIVersion:"v1", ResourceVersion:"380", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_d3a34a47-ccf2-4d78-a409-768ebfe3184f became leader
I0529 01:24:41.766439       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_d3a34a47-ccf2-4d78-a409-768ebfe3184f!

